Mobile Device Management INCLUDEPICTURE "http://brandtools/corporate/downloads/ms_logo/art/g_ms.bmp" \* MERGEFORMATINET    
 PAGE Mobile Device Management For Microsoft Windows Mobile 2002 Software for Smartphones and Pocket PCs Technical White Paper January 2004 Copyright © 2004 by Microsoft Corporation. All rights reserved. Table of Contents 2 Table of Contents 4 Abstract 4 Mobile Device Management 4Introduction 5Overview 5Intended Audience 5Reference Material Windows Mobile 2002 S oftware for 5 Smartphone s Device Management 6Provisioning Tasks 7Provisioning XML Documents 7DTD Structure Description 8characteristic Element 8parm Element 9Delivery Mechanisms for Configuring Mobile Devices 14OTA Device Management Architecture 15SMS Router 15WAP Stack 15The Push Router 16Configuration Manager 16Configuration Service Providers 17Bootstrap Provisioning 18OTA Bootstrapping using WAP Push 18Examples of a Bootstrap Provisioning File 19Ongoing Provisioning Mechanisms 19Continuous Provisioning 20Security Policies 21Default Policy Settings 21XIP ROM Regions 23Updating XIP ROM 23Next Release Highlights Windows Mobile 2002 S oftware for 25 Pocket PC s Device Management 25Device Management Architecture 26Benefits of Pocket PC Device Management 26Anti-Virus Hooks 26Provisioning Options 26Delivery Mechanisms 27XIP ROM 27XIP Overview 29XIP Update 29Next Release Highlights 31 Partner Offerings in Device Management 31Overview 33Action Engine 35BSQUARE Corp. 38DAT Group 41elata Ltd. 43LogicaCMG 47mFormation Technologies, Inc 51SmartTrust AB 54Synchrologic 56WDS Global Abstract Microsoft Corp. focuses on delivering reliable computing solutions that are available wherever and whenever people need them. This is what has driven development of our mobile computing software platform for smart client devices and, more specifically, the introduction of the Microsoft® Windows Mobile™ 2002 software for Smartphones and Pocket PCs. These devices offer rich user interfaces and connectivity to Web services. They can convert paper-based processes to form-based applications or extend existing desktop computing systems. They benefit mobile professionals and their organizations by improving productivity and reducing operational costs. Yet management of these smart devices poses a challenge for mobile operators who plan to deploy them in their network. Operators not only must initially configure the devices, they must also be able to reconfigure or update a device as changes occur, and restore the device to a known good state in the event of failure or data corruption. Adding to the complexity, they must have ways to perform these tasks remotely, "over the air" (OTA). Other considerations that fall under the realm of device management include making devices secure and tamper resistant in case they are lost or stolen. This white paper is divided into three sections. The first two describe the device management capabilities of Windows Mobile 2002 software for Smartphones and Pocket PCs. These discussions include new features targeted for both products in 2003. The paper focuses heavily on Over the Air Provisioning (OTAP) and introduces the OTAP device management solutions that Microsoft partners offer. The companies and products featured in this discussion are for information purposes only, and are a subset of the products available today. Microsoft does not recommend or endorse any product or company mentioned in this paper over another. Mobile Device Management Introduction Microsoft's continual focus on delivering personal computing solutions any time and anywhere led it to introduce two mobile devices: Windows Mobile 2002 software for Smartphones and Pocket PCs. These devices are personal computers equipped with a built-in phone and radio stack. They enable you to be mobile and still connect to resources on your intranet or the Internet. Mobile devices are poised to become an invaluable tool for the modern worker and the enterprise. It is expected that these devices will be deployed in large numbers, creating new challenges for mobile operators and their customers. Because these devices are highly sophisticated and, by design, mobile, device management represents one of the larger challenges. Some key questions mobile operators must ask are: How do I provision these devices? How do I configure various settings? How do I keep up with the changes in configuration? How do I supply patches and upgrades? How do I control the security on the devices? How can I help my customers by preventing or minimizing downtime? What resources are available to help in device management? This white paper begins to address these complex questions, and presents Microsoft's view of Mobile Device Management. Overview The term "device management" can mean different things in different contexts. For the purposes of this document, we use device management to refer to the initial bootstrapping and ongoing provisioning of a Smartphone or Pocket PC device. To make a device useful to a mobile worker, mobile operators must first bootstrap and provision the device. Bootstrapping is the process of initially provisioning a Smartphone that is not yet configured, enabling mobile access for users and ongoing provisioning by the operator. Ongoing provisioning is the process of reconfiguring settings and applying patches and system upgrades whenever necessary. Other aspects of device management include ensuring a device is secure-that an enterprise network cannot be compromised by a stolen or rogue device-and that operators can recover a device quickly should a failure occur. These tasks must be accomplishable remotely "over the air." In addition to the operational aspects of device management, an enterprise also needs to provision a device with information about the user and the enterprise. It needs to keep track of active devices, and each device's hardware and software configuration. Users have device management requirements too: they must be able to download applications from Web sites and, if their device fails, to restore the device to operation quickly. The white paper is divided in the following three sections: The device management capabilities that Microsoft provides in Windows Mobile 2002 software and the new features expected in the next version, Windows Mobile 2003 software. The device management capabilities of Windows Mobile 2002 software for Pocket PCs and the new features expected in its next release. Device management solutions that some of Microsoft's partners offer. This is a partial list of our partners who specialize in a number of device management areas. Their products can benefit you in jump-starting your deployment. Intended Audience This document is intended for the technical staff of a mobile operator and Microsoft sales and technical support staff. Reference Material Following is a list of reference material that supplements this white paper: Windows Mobile-based Smartphone Adaptation Kit for Mobile Operators (AMO) Windows Mobile 2002 software for Smartphones Evaluation Kit Merlin Book of Knowledge Windows Mobile Book of Knowledge Contact your local Microsoft Sales representative to obtain a copy of these documents. Windows Mobile 2002 Software for Smartphones Device Management Windows Mobile 2002 software for Smartphones is a platform for mobile communication and computing. Microsoft, in conjunction with other companies, participated in the standards organization efforts that produced the initial specifications for Smartphone. The main partners in this effort are the Original Device Manufacturers (ODMs), the Original Equipment Manufacturers (OEMs) and the mobile operators. Device provisioning is an important area of device management, and is one of the key features of Windows Mobile 2002 software for Smartphones. There are several ways you can provision a Windows Mobile-based Smartphone device. The most obvious method is to use the Graphical User Interface (GUI); however, this method is also the most tedious because it requires that you touch each device. A better way to configure a device is by using Extensible Markup Language (XML) configuration files. You can locate these XML configuration files either in the OPERATOR read-only memory (ROM) region when the device is placed in production use or, subsequently, you can push the files to the device during bootstrap or ongoing provisioning. The device can also pull the configuration files but only after the device has been bootstrapped. The flowchart in Figure 1 illustrates these options. Figure 1: Smartphone device provisioning methods This section describes: Two types of provisioning: bootstrapping and continuous provisioning Creating provisioning XML documents Methods for delivering files and data to a Smartphone (delivery mechanisms) OTA device management architecture, including SMS message flow Security policies "Execute in Place" (XIP) read-only memory (ROM) Provisioning Tasks Windows Mobile 2002 software for Smartphones adheres to the Wireless Access Protocol (WAP) 2.0 specifications; Microsoft contributed to the definition of continuous provisioning. Bootstrap Provisioning You must first bootstrap a device before it can connect to data services and access WAP sites, Internet sites, and corporate services. You can also use the bootstrap procedure to change the device's security model from the default configuration. Any device settings can be configured using the XML configuration files. There are several bootstrap mechanisms that you can use. These are discussed later in this document. Continuous Provisioning Windows Mobile 2002 software supports ongoing or continuous provisioning for a number of scenarios including: Changing the core configuration and registry settings Configuring, adding, updating, or removing additional software Updating operating system components with new software components Personalizing and adding user interface components Activating software available in ROM or installed over the air Before you provision Windows Mobile 2002 software, you should understand these concepts: You typically begin the provisioning process by creating an XML configuration file. You can do this by either modifying an existing template file or creating a new file. Guidelines for creating XML configuration files are discussed in "Provisioning XML Documents." The next step is to decide on a delivery mechanism to use to configure a mobile device. A summary of possible delivery mechanisms is provided under "Delivery Mechanisms for Configuring Mobile Devices." You need to understand the Windows Mobile 2002 software for Smartphones device management architecture, described in "OTA Device Management Architecture." Finally, you need to understand the security policies that apply to the device. A brief description of security is given in the "Security Policies" section. Provisioning XML Documents A configuration request is formulated as Universal Transformation Format 8 (UTF-8) encoded provisioning XML documents. The Windows Mobile 2002 software for Smartphones MSPROV.DTD (Document Type Definition) is used to describe the configuration document that is passed between a Trusted Provisioning Server (TPS) and Windows Mobile software. DTDs comprise the rules data must adhere to for the data to be valid. For more information on provisioning XML, refer to the "Adaptation Kit for Mobile Operators (AMO)." (To obtain a copy of the AMO, please contact your local Microsoft Sales representative.) The format of an XML code example is shown below: <wap-provisioningdoc> <characteristic type="clock"> <parm name="TimeZone" value="4"/> </characteristic> </wap-provisioningdoc> In this example, characteristic type refers to a Configuration Service Provider (CSP) named "clock"  and requests the setting of the parm element TimeZone . DTD Structure Description The Windows Mobile software for Smartphones DTD uses the characteristic element for grouping settings. In addition, characteristic , nocharacteristic or characteristic-query elements can be used when all of the settings in one characteristic are processed in the same manner. Setting elements are parm , noparm or parm-query , and are nested below the characteristic element. Query is not supported over the air at this time due to a lack of an OTA response mechanism in version 1.0 of Windows Mobile software for Smartphones. characteristic Element The first entry under the top-level WAP-provisioningdoc element is the characteristic element which refers to a specific Configuration Service Provider (CSP). Beneath the top level there may be any number of further characteristics - each serves to perform an operation or limit the scope of an operation. Some of the common attributes of characteristics are as follows: type - designates the CSP to which the setting belongs. mwid - is Smartphone specific and is used to identify that this characteristic is a network access point (NAP) or ProxyID. parm Element The parm element represents a specific setting under the parent characteristic. It is used to move configuration data around the device and contains metadata describing how that data is to be viewed and edited by CSP. Some of the common attributes of the parm element are given below: name - This attribute corresponds to the parm name being set. value - This attribute describes the value of the parm being set. datatype - This attribute corresponds to the effective data type of the parm and aids in parsing and data validation. maxvalue- This attribute for numeric data represents the highest allowable value for this parm. minvalue- This attribute for numeric data represents the lowest allowable value for this parm. Example: Customizing the Favorites List This XML example shows how to customize the Favorites list. <wap-provisioningdoc> <characteristic type="BrowserFavorite"> <characteristic type="Secure"> <parm name="URL" value="https://labsrv.sphone.net/secure"/> </characteristic> <characteristic type="UnSecure"> <parm name="URL" value="http://labsrv.sphone.net/unsecure"/> </characteristic> <characteristic type="Download"> <parm name="URL" value="http://labsrv.sphone.net/Download"/> </characteristic> <characteristic type="Outlook Mobile Access"> <parm name="URL" value="http://labsrv.sphone.net/Exchange"/> </characteristic> </characteristic> </wap-provisioningdoc> Example: Setting a GPRS Connection This XML example shows how to set a General Packet Radio Service (GPRS) connection. <wap-provisioningdoc> <characteristic type="CM_GPRSEntries"> <characteristic type="GPRS1"> <parm name="DestId" value="{436EF144-B4FB-4863-A041-8F905A62C572}" /> <characteristic type="DevSpecificCellular"> <parm name="BearerInfoValid" value="1" /> <parm name="GPRSInfoValid" value="1" /> <parm name="GPRSInfoProtocolType" value="2" /> <parm name="GPRSInfoL2ProtocolType" value="PPP" /> <parm name="GPRSInfoAccessPointName" value="internet3.voicestream.com" /> <parm name="GPRSInfoAddress" value="" /> <parm name="GPRSInfoDataCompression" value="1" /> <parm name="GPRSInfoHeaderCompression" value="1" /> <parm name="GPRSInfoParameters" value="" /> </characteristic> </characteristic> </characteristic> <characteristic type="CM_ProxyEntries"> <characteristic type="Proxy1"> <parm name="SrcId" value="{436EF144-B4FB-4863-A041-8F905A62C572}" /> <parm name="DestId" value="{A1182988-0D73-439e-87AD-2A5B369F808B}" /> <parm name="Proxy" value="" /> </characteristic> </characteristic> </wap-provisioningdoc> Example: Setting the Time Zone Date and Time This XML example shows how to set the Time Zone Date and Time values. <wap-provisioningdoc> <characteristic type="CLOCK"> <parm name="Date" value="10/7/2002"/> <parm name="Time" value="1:59:52 PM"/> <parm name="AlarmOn" value="0"/> <parm name="AlarmTime" value="1:00:00 AM"/> <parm name="TimeZone" value="4"/>  </characteristic> </wap-provisioningdoc> Delivery Mechanisms for Configuring Mobile Devices There are several methods (called "delivery mechanisms") that you can use to configure mobile devices. This subsection briefly describes: Over The Air Provisioning (OTAP) Service Indication (SI) and Service Loading (SL) Remote API (RAPI) and ActiveSync® Secure Digital/Multimedia Card (SD/MMC) Microsoft Pocket Internet Explorer using HTTP or HTTPS Electronic Mail (e-mail) Short Message Service (SMS) Graphical User Interface (GUI) In most configuration scenarios, an XML configuration file is pushed to the phone and processed by the Windows Mobile software Push Router (discussed in the "OTA Device Management Architecture" section). Devices bootstrapped with connectivity settings can also pull any configuration files that are formatted as CAB Provisioning format (.cpf) or CAB Home Screen definition (.hme or .home) files. The exception to this is the GUI; you must manually configure the GUI. Over The Air Provisioning Windows Mobile-based Smartphones can be provisioned OTA using Short Message Service (SMS). In this scenario, an XML file is typically signed using the mobile operator's network personal identification number (PIN) -the International Mobile Subscriber Identity (IMSI)-and the user ID PIN. The message is then pushed OTA using SMS. An authentication page appears, prompting the user to type in their user ID. The user is notified when the process completes. Figure 2 shows this process. Figure 2: Authenticating the user and notifying the user Service Indication and Service Loading You can deliver files using Service Indication (SI) and Service Loading (SL) in conjunction with WAP Push. This is similar to the functionality provided by OTAP. In this scenario, the SI process sends an XML file to the device to notify the user that an update is available. The SL process automatically downloads the software update or provisioning file. Remote API and ActiveSync You can use the remote application programming interface (RAPI) within Microsoft ActiveSync. In this scenario, shown in Figure 3, ActiveSync synchronizes the information on your Smartphone when you connect your device to your PC or server using a USB connection. This process uses the executable file Rapiconfig.exe to push the XML provisioning file. Example : Rapiconfig.exe /p "filename.xml" Figure 3   Using ActiveSync to synchronize Smartphone and desktop information Secure Digital/Multimedia Card You can use a Secure Digital/Multimedia Card (SD/MMC) card. In this scenario, you use the AutoRun feature of the Microsoft Windows® operating system to load the new contents or to install a new application on the device. To do this, first create a directory on the card named "2577" and copy Autorun.exe to this directory. AutoRun starts as soon as the card is inserted into the device and displays an option or a menu that enables you to load the XML provisioning files. Microsoft Pocket Internet Explorer using HTTP or HTTPS You can deliver files using Microsoft Pocket Internet Explorer and Hypertext Transfer Protocol (HTTP) or Secure HTTP (HTTPS). In this scenario, the user browses a Web site from which they can download files. The user selects a link that downloads a cab provisioning file (.cpf) file, which is a XML provisioning file created as a cab file and file extension renamed from .cab to .cpf. The .cpf file is usually signed with a certificate. If the user chooses to download the file, and the security policy allows it, the configuration file is used to update the client settings. The user receives a notification in their Inbox when the process is completed. This process is shown in Figures 4 and 5. Figure 4: Selecting to download a file and confirming the download Figure 5: The notification message Electronic Mail You can use e-mail to deliver files to a client device. In this scenario, an e-mail message that includes a hyperlink or Uniform Resource Locator (URL), as shown in Figure 6, is sent to the user. After the user opens the message, they click the hyperlink, starting Pocket Internet Explorer and opening the Web page specified by the hyperlink. The remainder of this process is the same as described above for Pocket Internet Explorer over HTTP or HTTPS. Figure 6: Including a hyperlink in an e-mail message Short Message Service A SMS message can also contain a hyperlink to a Web site download page. This process is very similar to the method described above for e-mail, and is shown in Figure 7 and Figure 8. Figure 7: A URL within a message and the download Confirm page Figure 8: Specifying the file location on the device Graphical User Interface You can manually deliver files using the device's graphic interface, as shown in Figure 9 and Figure 10. To do this: Click Programs and then click Settings . Under Settings , click Data Connections and select a GPRS or other Internet connection . On Data Connections , under Menu , click Edit Connections and select option 4 GPRS Connections . On GPRS Connections , click Menu and click Add . On Add GPRS , complete Description , Connects to , Access Point , and User name and click Done .        Figure 9: Selecting the Data Connections page from Settings         Figure 10: Creating a new GPRS connection OTA Device Management Architecture Windows Mobile 2002 software for Smartphones is designed to accept SMS using OTA protocol. You can use this mechanism to perform widespread provisioning and configuration tasks on Windows Mobile-based devices. Figure 11 illustrates the process of pushing a message OTA to a Smartphone device via a provisioning server, depicts the Windows Mobile-based device management architecture, and provides a reference for the subsections that follow. Figure 11: SMS message flow and OTA device management architecture SMS Router The SMS router is the first component in the device management chain. SMS router receives the incoming SMS messages from the network, determines their final destination, and delivers them to the appropriate software component. The SMS router is designed to route messages to one client per provider. The WAP Stack is an example of an SMS provider. Messages that conform to Global System for Mobile Communications (GSM) version 3.4 are passed to the network layer dynamic link library (DLL). The network layer DLL then offers the messages to SMS providers that are listening on one or more Internet Protocol (IP) ports. The SMS provider that accepts the incoming message performs the following steps to process the message: Interpret the SMS message header Delivers the message to the subscribing application (provider specific) Removes the message from the SMS store WAP Stack The second component in the OTA device management chain is the WAP Stack. This is the protocol stack for Wireless Access Protocol (WAP). Table 1 compares a typical WAP Protocol stack to a Web Protocol. Table 1: WAP versus Web Protocol comparison WAP Web WAE: WML, WML Script, Push Browser: HTML WSP - Session HTTP WTP - Transaction TCP WTLS - Security TLS or SSL WDP- Datagram UDP Bearer (SMS or IP) IP The Push Router The next component in the chain is the push router. The push router is the central location for receiving, authenticating and forwarding all of the incoming push provisioning messages. It determines the type of incoming message and ensures its delivery to the correct client application. It also includes a Security Module which enforces the security policy. Tasks performed by the push router include the following: Accept push provisioning messages, and use the Security Module to authenticate message origin. Use the Security Module to assign a security role to each message, based on the origin of the push message and the authentication method. Forward each message with its assigned security role to the appropriate client application. The push router can accept data over the GSM SMS network through the Push Proxy Gateway (PPG), or as a download through Microsoft Pocket Internet Explorer. Configuration Manager The Configuration Manager accepts XML configuration requests from the push router. These requests change the configuration of application software already installed on the device, or they change the device system itself. Configuration requests are sent through the following mechanisms: OTA from a provisioning server to the device over a GSM SMS wireless network using the WAP Push Gateway Downloaded in a .cpf file through Pocket Internet Explorer Sent through Microsoft ActiveSync Burned in flash memory and loaded during the cold boot procedure Configuration Service Providers Configuration Service Providers (CSPs) execute specific configuration requests by changing or querying the values of specific device and application settings. The only high-level component that can send configuration requests to the CSPs is the Configuration Manager, which sends the requests in XML format. Table 2 lists Smartphone CSPs. Table 2: Smartphone CSPs CSP Description ActivesyncConn Configures ActiveSync connection ActivesyncPartner Configures ActiveSync partnership Bootstrap Facilitates the bootstrap process BrowserFavorite Adds favorite to browser favorite list CertificateStore Stores certificate to designated certificate store CM_GPRSEntries Sets GSM GPRS settings CM_Mappings Connection manager mappings between uri and GUID CM_Mappings Connection manager mappings between uri and GUID CM_NetEntries Provides Network Information CM_Networks Sets network GUID CM_Planner Configures the preferred connections CM_PPPEntries Configures PPP Entries on the device CM_ProxyEntries Configures Proxy connections CM_TestEntries Provides test entries CM_VPNEntries Configures VPN Entries on the device DeviceInformation Battery power, OS version, build version, etc. DeviceLock Sets, disables device password EMAIL Sets email incoming and outgoing FileOperation Handles all file operations Home Sets home screen LoaderRevocation Revokes certificates from certificate store Locale Sets locale settings Metabase Adds, removes, changes metabase entries for settings NAPDEF Sets connection information used for WAP gateway Profiles Changes to profile control panel PXLOGICAL Sets WAP gateway settings Registry Facilitates registry changes and makes new entries SecurityPolicy Sets and updates security policies Sounds Changes to sound control panel Sync Sets sync related parameters TAPI TAPI interface - all network settings Uninstall Uninstalls applications which are not in ROM Bootstrap Provisioning A new phone with just the Subscriber Identity Module (SIM) card installed can send and receive voice calls, but not data calls, unless the provisioning file is already placed in the OPERATOR.ROM region. One of the first tasks on a newly deployed device is to perform the bootstrap procedure that will: Provision the device with connectivity data to enable the device to access network's data service through a WAP gateway or directly to the Internet. Potentially alter the security model and policies from the default open security. Configure the device to accept further OTA configuration instructions from a list of trusted IP Addresses only. Configure SI/SL The bootstrap procedure may be initiated using one of the following methods: A ROM Configuration XML file (.provxml) pre-burned in OPERATOR ROM region by the ODM. An OTA WAP Push mechanism Desktop ActiveSync while the device is cradled using Rapiconfig.exe. Controls available via the phone's User Interface. For example, in the XML code sample shown in "Defining a Trusted Provisioning Server," the characteristic type is set to BOOTSTRAP to invoke the Bootstrap CSP. OTA Bootstrapping using WAP Push Follow these steps to bootstrap a device by using the OTA WAP Push mechanism: Define the configuration data required for bootstrap process. This may include WAP Gateway, Trusted Provisioning Server, Point-to-Point Protocol (PPP) settings, GPRS settings, security policy, corporation certificate and custom settings. Generate a UTF-8 encoded provisioning XML file. Compress the message into the WAP Binary XML (WBXML) format. Secure the message by signing it with a network PIN and a user PIN. For GSM networks the network PIN is the International Mobile Station Identifier (IMSI) number in the SIM card. Send the XML file in a WAP Push message to the Push Proxy Gateway (PPG) using Push Access Protocol (PAP). At the Push Proxy Gateway, use the WAP Push OTA protocol to send the message to the Smartphone over the air through the appropriate OTA bearer, for example, GSM SMS. When the message arrives at the device it is intercepted by the SMS router, which routes the message to the WAP stack. WAP decodes the WAP Push message and sends it to the push router. The push router pops up the authentication UI; the user enters the PIN, and the push router authenticates the message and routes it to the Configuration Manager. If the message is signed with a user PIN and a network PIN, the message will be assigned both the operator role and a user-authenticated role. The Configuration Manager grants the manager role to the configuration, according to the Grant Manager policy, and calls the specific CSPs to process the decompressed XML. Examples of a Bootstrap Provisioning File The following are examples of bootstrap provisioning XML files. Defining a Trusted Provisioning Server <wap-provisioningdoc>     <characteristic type="BOOTSTRAP">         <parm name="NAME" value="TEST Trusted TPS" />         <parm name="PROVURL" value="http://www.mytps.com" />         <parm name="PROXY-ID" value="TESTPROXY" />         <parm name="CONTEXT-ALLOW" value="0" />     </characteristic> </wap-provisioningdoc Setting up WAP parameters <wap-provisioningdoc>  	<characteristic type="BOOTSTRAP">   		 <parm name="PROVURL" value="http://ipaddress/senddata.asp"/>   		<parm name="NAME" value="YourSMSC" />  	</characteristic> <characteristic type="PXLOGICAL">  		<parm name="PROXY-ID" value="LogPush1"/>  		<parm name="NAME" value="YourSMSC"/>  		<parm name="TRUST"/>  		<characteristic type="PXPHYSICAL">  			<parm name="PHYSICAL-PROXY-ID" value="PhyPush1"/>  			<parm name="PXADDR" value="1425phnumber"/>  			<parm name="PXADDRTYPE" value="E164"/>  			<parm name="TO-NAPID" value="SMSNAP1"/>  			<parm name="PUSHENABLED" value="1"/>  		</characteristic>  	</characteristic> <characteristic type="NAPDEF">  		<parm name="NAPID" value="SMSNAP1" />   		<parm name="BEARER" value="GSM-SMS" />   		<parm name="NAME" value="WAP SMSC"/>  		<parm name="NAP-ADDRESS" value="+1000000" />   	 </characteristic> <characteristic type="PXLOGICAL">  		<parm name="PROXY-ID" value="Log1" />   		<parm name="STARTPAGE" value="http://ipaddress/default.wml" />   		<parm name="NAME" value="SFone WAPLite" />   		<characteristic type="PXPHYSICAL">  			<parm name="PHYSICAL-PROXY-ID" value="Phy1" />   			<parm name="PXADDR" value="ipaddress" />   			<parm name="TO-NAPID" value="NAP1" />   			<characteristic type="PORT">  				<parm name="PORTNBR" value="9201" />   			</characteristic>  		</characteristic>  	</characteristic>   	<characteristic type="NAPDEF">  		<parm name="NAPID" value="NAP1" />   		<parm name="BEARER" value="GSM-CSD" />   		<parm name="NAME" value="SFone WAPLite"/>  		<parm name="NAP-ADDRESS" value="+1425phnumber" />   		<characteristic type="NAPAUTHINFO">  			<parm name="AUTHNAME" value="username" />   		 	<parm name="AUTHTYPE" value="PAP" />   			<parm name="AUTHSECRET" value="password" />   		</characteristic>  	</characteristic>  </wap-provisioningdoc> Ongoing Provisioning Mechanisms After bootstrap provisioning, devices can be provisioned by means of continuous or ongoing provisioning mechanisms. The preferred way for enterprise users to provision their devices is for them to pull .cpf files from authenticated Web sites. Continuous Provisioning Windows Mobile software offers a provisioning structure, along with a unique new file extension that allows for continuous or ongoing provisioning of the device. The purpose of continuous provisioning is to update or remove configuration settings on the device. The mobile operator can enable continuous provisioning by allowing the user to either pull or accept a .cpf file. The .cpf file is a provisioning file that is wrapped in a .cab file and can be signed with a certificate. This is the most secure method for enabling continuous provisioning. New attributes to the existing parm element are defined in the WAP provisioning specifications; these attributes provide additional query and remove functionality. Continuous Provisioning Example The following example sets a device registry entry. <wap-provisioningdoc>     <characteristic type="Registry">         <characteristic type="HKCU\Software\Microsoft\AirSync\Connection">             <parm name="Secure" value="0" />         </characteristic>     </characteristic> </wap-provisioningdoc> Removing a setting <wap-provisioningdoc> <characteristic type="CM_Mappings">             <nocharacteristic type="1005" />   </characteristic>    <characteristic type="CM_PPPEntries">             <nocharacteristic type="PPP1" />   </characteristic> </wap-provisioningdoc> Security Policies Security policies form an important consideration for device management. Operators can use the default set of security policies, which allow most device provisioning and management tasks. However, operators may tighten the security policies to require specific security roles for applications that attempt to provision or manage the device. This involves using digital certificates for signing the provisioning files, thereby guaranteeing authenticity and enabling the device to assign the appropriate role. A detailed discussion of this process is given in the "Security Guide" chapters of the Windows Mobile 2002 software for Smartphones Evaluation Kit and is described in other white papers listed under "Reference Material." The diagram in Figure 12 illustrates some of the policies defining application roles on Smartphone devices. Figure 12: Windows Mobile software application roles and policies Default Policy Settings By default, the device user is granted device manager roles, which enable the user to change all settings allowed by the Configuration Manager. It is recommended that mobile operators modify this default security policy by pushing their own security settings to the device. Table 3 lists the default security policy settings. Table 3: Smartphone default security policy settings Security Policy Default Setting RAPI Policy Protected Mode Unsigned CAB Policy Do not allow unsigned .cab files Unsigned Applications Policy Enabled Unsigned Themes Policy USER_UNAUTH Trusted Provisioning Server Policy Disabled WAP Signed Message Policy PPG_AUTH | PPG_TRUSTED | OPERATOR Service Loading Policy None Service Indication Policy None Unauthenticated Messages Policy None OTA Provisioning Policy USER_AUTH | PPG_AUTH | PPG_TRUSTED | OPERATOR Wireless Datagram Protocol (WDP) Push Policy Disabled Wireless Session Protocol (WSP) Push Policy Disabled XIP ROM Regions The ability to remotely manage and configure devices is an important benefit for mobile professionals, and for those charged with managing mobile devices on their behalf. Enterprise managers or users can now take advantage of the Windows Mobile XIP (Execute in Place) technology in order to update or upgrade their existing software with important patches and operating system upgrades. XIP saves space on the device by allowing programs to execute from ROM without loading to random access memory (RAM), while a small portion of RAM may be used as a workspace while the program is running. Further, XIP updating allows for complete operating system upgrades or it can be used to update specific applications by isolating particular regions of the Flash memory and updating only those parts. A multiple XIP system divides the Windows Mobile ROM image into discrete regions. The XIP format enables an application and its registry data to be assigned to a particular ROM region. Windows Mobile has been designed with the following ROM regions, each designated according to the source of its content. The OEM region . This 1.5 MB region is owned by the OEM and contains Gwes.exe, Nk.exe, Bootloader, Rildrv.dll, OEM drivers and related DLLs. All files originating from the OEM belong here. The Chain File region . This region is owned by the ODM and contains information about all other ROM regions. The SMARTFON ( Windows Mobile 2002 s oftware for Smartphones ) region . This 12 MB region is owned by Microsoft and contains all Windows Mobile 2002 software for Smartphones applications and any remaining operating system files. All files originating from Microsoft belong here. The OPERATOR region . This 512 KB region is owned by the mobile operator and contains all bitmaps, .gif files, XML for Home screens and all mobile operator customization files such as the provisioning XML file. All files originating from the mobile operator belong here. The LANG region . This 3.0 MB region is owned by the OEM. The distributed ROM image will only contain support for languages that the OEM has selected. Figure 13:  ROM regions Figure 13 shows the layout of Windows Mobile software ROM regions. The ROM regions are adjacent to each other in memory and are as small as possible. Each region is composed of sections that are multiples of 128 KB. There is no defined buffer size. A single ROM region, or update to a ROM region, can be created and loaded on any Smartphone device from any manufacturer with the proper security keys. However, security on Windows Mobile software allows each region to be updated only by the owner of the region. In the case of the OPERATOR region, it makes sense for mobile operators to decide on all the required files and get the ODM to configure the OPERATOR region during manufacturing process. In this way a mobile operator can pre-configure the Smartphone connection settings, favorites, security policies, digital certificates and branding information and would only need to update as and when required. The following sections describe the XIP ROM update process. Updating XIP ROM A ROM update file can be deployed to Windows Mobile 2002 software for Smartphones as a single .xdp file, or alternatively as multiple .xdp files packaged in a .cab file. The .xdp update file is economical, containing only the difference between the data that is currently in the OPERATOR region and the new data. This is ideal for OTA transmission of small patches and bug fixes. The device verifies system updates received OTA through this series of actions: When an OTA system update file is downloaded, UpdateXIP.exe is called. Update.exe looks for the target ROM region for the update file. The public key associated with the region is retrieved. The hash of the OTA system update file is computed. The encrypted hash in the signature of the OTA system update file is decrypted by using the public key. The two hashes are compared. If the hashes match, the OTA system update is performed; if not the update file is deleted. Next Release Highlights These features are planned for the next release of Windows Mobile software. Microsoft .NET Compact Framework is included in ROM The .NET Compact Framework is a subset of the .NET Framework that provides much of the rich functionality in a smaller footprint and allows managed code applications to run on Windows Mobile software for Pocket PCs and Smartphones. De velop applications in Microsoft Visual C# ® .NET and Microsoft Visual Basic ® .NET Managed code applications for Windows Mobile software for Pocket PCs and Smartphones, written in Visual C# or Visual Basic .NET, can be developed using Visual Studio® .NET 2003 Smart Device Extensions. Windows Mobile 2003 software for Smartphone s supports Active Template Libraries (ATL) Windows Mobile 2003 software for Smartphones joins Windows Mobile 2003 software for Pocket PCs in supporting ATL. WAP push router extensibility allows for custom processing of messages Applications can intercept different types of WAP Push messages and re-route them to different push clients for custom handling via the PushRouter_xxx, functions declared in pushclient.h. The push client is registered for notification with the push router to receive specific types of push messages on the device for custom processing. This capability is in addition to SMS interception. This functionality is supported for Global System for Mobile Communication (GSM) devices only; Code Division Multiple Access (CDMA) devices are not supported. . CPF files can be used to provision mobile devices .cab files can be used as the delivery mechanism to provision Pocket PC and Smartphone devices. Mobile device applications can perform a selective installation The system now provides a selective install method for a mobile application based on a combination of platform (Windows Mobile software for Pocket PCs or Smartphones) and a specific release version. L2TP/IPSec VPN is supported on Windows Mobile 2003 software for Pocket PC s and Smartphone s This technology allows mobile devices to use Layer Two Tunneling Protocol (L2TP) connections with Internet Protocol security (IPSec). The combination of L2TP and IPSec, known as L2TP/IPSec, is a highly secure technology for making remote access virtual private network (VPN) connections across the Internet and other public networks. Windows Mobile 2003 software for Smartphone s can use a security prompt for unsigned applications Windows Mobile 2003 software for Smartphones can use a security policy that, when turned on, causes a prompt to appear that asks the user whether to accept the installation of an unsigned application. Mobile2Market (M2M) security certificates for Windows Mobile 2003 software for Smartphone s are in ROM The Mobile2Market certificate roots are included on Windows Mobile 2003 software for Smartphones by default. Pocket Internet Explorer is updated on Windows Mobile 2003 software for Smartphone s Pocket Internet Explorer has been updated to support the following: Hypertext Markup Language (HTML) 4.01 Extensible HTML (XHTML) Cascading Style Sheets (CSS) Microsoft JScript® version 5.5 Wireless Markup Language (WML) 2.0 (XHTML + WML 1.x) IPv6 support New extensible imaging library Home Screen functionality is updated on Windows Mobile 2003 software for Smartphone s The Home Screen plug-in infrastructure supports a new function, SHOnPluginDataChange, declared in aygshell.h. Incoming SMS messages can be intercepted The IMailRuleClient interface provides the ability for an application to intercept incoming text SMS messages. This interface and its methods enable a developer to perform customized filtering rules on incoming messages, and handle them as appropriate within their application. More e-mail services are configurable through Configuration Manager The E-mail Configuration Service Provider (CSP) enables the configuration of Internet-Protocol e-mail services, such as Internet Mail Access Protocol version 4 (IMAP4) and Post Office Protocol version 3 (POP3), through the device's Configuration Manager infrastructure. Custom Read or Compose forms for Inbox can be registered The IMessageFormEx and IFormProviderEx interfaces, declared in cemapi.h, allow developers to register a custom set of Inbox Read or Compose forms that match their application needs. Such forms can be used to construct Enhanced Messaging Service (EMS) or Multimedia Messaging Service (MMS) clients. IPv6 is now supported Most Windows Mobile 2003 software for Pocket PCs and Smartphones APIs and components now support IPv6-style addressing. IDccManSink2 is the new sink interface (which supports IPv6) that is used to notify client applications about device connections. Bluetooth functionality is more controllable The BthGetMode and BthSetMode functions, declared in bthutil.h, provide the ability to query the current state of the Bluetooth control panel, and to modify its state (Bluetooth Power Off, Connectable, Discoverable, etc.). This functionality is available for both Pocket PCs and Smartphones. Applications can be woken via a WAP packet over SMS on Windows Mobile 2003 software for Smartphone s This functionality for Windows Mobile 2003 software for Smartphones provides applications with a mechanism to shutdown and then only be woken (or launched) when a WAP packet arrives over SMS. This is accomplished through a registry-based registration scheme. Windows Mobile 2002 Software for Pocket PCs Device Management This section discusses the device management options on Windows Mobile-based Pocket PC devices, addressing these topics: Pocket PC device management architecture "Hooks" to integrate anti-virus software into the operating system Provisioning options Mechanisms for delivering files and data to a Pocket PC Use of "Execute in Place" (XIP) ROM Next release product features Device Management Architecture It is important to understand that the Windows Mobile software for Pocket PCs architecture is derived from the Pocket PC 2002 device. When Microsoft initially developed Pocket PC, OTA device management was not required and so was not included in the design. Microsoft added device management to Windows Mobile software for Pocket PCs specifically to extend the appeal of the device to mobile operator and enterprise customers. The primary difference between Windows Mobile software for Pocket PCs and for Smartphones is that Windows Mobile software for Pocket PCs does not include an SMS Router Core component. Instead, a client component could be created and installed on the Pocket PC device that enables it to handle different types of SMS messages. These components could also be obtained from Microsoft device management partners. Windows Mobile software for Pocket PCs includes two new elements to improve device management: Microsoft requires OEMs to use Flash ROM in their devices to better enable an operator to upgrade a device deployed into production. To make use of the Flash ROM, Microsoft has built into Windows Mobile software for Pocket PC the ability to perform application and ROM updates remotely over the air; an operator no longer needs to touch the device. Benefits of Pocket PC Device Management By improving the device management capabilities of Pocket PC, Microsoft benefits its customers in the following ways: Mobile Operator and Enterprise By requiring OEMs to include Flash ROM in all Pocket PC devices, an operator or system administrator has an upgrade process for all Pocket PCs they purchase and deploy; they can easily download applications, software updates, and Microsoft ROM updates. An operator or system administrator can update a device remotely, without touching the client device. (To do this, mobile operators must set up their own polling server or have a download server available. Contact one of the Microsoft partners listed later in this document if you need assistance with this.) Deployed devices constantly poll an update server for the latest releases-including new application releases and Hotfixes-from Microsoft. This makes the device more stable because it is always up-to-date with the latest versions of applications and software. A remote user (in the field) retrieves the latest updates from their corporation through the same mechanism as a device docked in a device cradle. Operators and system managers can use one method to update all devices no matter who owns the device, where the device is located, or what updates the device requires. Mobile Professional/User The device is self-healing, automatically retrieving the latest patches, fixes, and offerings available from Microsoft and our OEM partners. In order to protect user privacy, downloads to devices from our servers are not tracked. By design, the device does not send any identifying hardware or user information to the polling server. The Scheduler tool lets users elect whether they want to install a latest patch or release thereby allowing full user control of device management. Updates are applied to ROM and therefore are persistent even after a cold boot of the device. The new patches, software, or applications are not lost once successfully downloaded. The update processes for Windows Mobile-based Pocket PC are much simpler than those previously available to Microsoft Windows CE devices. Anti-Virus Hooks For corporations concerned about security, the device operating system provides the ability for a developer to incorporate anti-virus software. For example, you could incorporate anti-virus software that detects if a virus is attached to an e-mail message that a user has queued for download over a wireless connection. The software could notify the user through e-mail if a virus is detected. The user can then click Fix to allow the virus scanner to delete the offending file, and can then continue downloading their remaining e-mail securely. Provisioning Options You can provision the Windows Mobile-based Pocket PC using one of these methods: Graphical User Interface (GUI) An application that resides on the client device which receives and applies configuration data Delivery Mechanisms You can deliver data or install an application on the device using one of these methods: SD/MMC card Downloading from a Web site using Pocket Internet Explorer or sending a user a link to a download site through an e-mail or SMS message. SMS using a third-party client be installed on the device XIP ROM XIP Overview To make the ROM updateable and upgradeable, Windows Mobile software for Pocket PCs is divided into separate "execute in place" (XIP) regions. With the combination of Flash ROM (memory which can be overwritten), XIP regions allow the user to update just a section of the ROM, without rewriting the entire ROM. For example, if an OEM needs to fix their drivers, they can update their portion of the ROM without affecting other ROM regions on the device. Work specific to the Phone capability of Windows Mobile software for Pocket PCs, for example, can be limited to one region of ROM: the Phone region. This enables an OEM or Microsoft to release Phone updates separately from other updates. The update can be burned-in to shipping phones at a later time. Table 4 lists the various regions of XIP ROM. Table 4: Windows Mobile 2003 software for Pocket PC s XIP Regions Region Name and Contents n/a Boot Loader: Non-updatable zone 0 Kernel (Kernel) Nk.exe File system Other dll's and system files 1 Operating System and Chain File Coreos VPN (Point-to-Point Tunneling Protocol (PPTP)) Runtime (Visual Basic, Visual C#, partial ActiveX® Data Object (ADO)) Operating System Networking components Schannel (networking) Telephony API (TAPI, also known as the phone dialer) Files Chain information 2 Shell (SHELL) Shell Files Operating System Communications and Networking Configuration Manager Remote Access (RAS) CSP Cell Core OBEX Tshres.dll 3 Browsing (BROWSING) Pocket Internet Explorer File explorer Files Visual Basic Script 4 Core applications (COREAPPS) PIM (Personal Information Management) Pocket Office Inbox Files Digital rights manager Runtimes (partial ADO) 5 Sync (SYNC) ActiveSync Device Sync Nexus Sync Pocket Outlook® Calendar store PIM store Connection Manager Rnaapp.exe Note.dll Cemapi.dll 16/24 Mega Byte (MB) boundary Sections 0-5 are included in the 16 MB ROM Sections 0-7 are in the 24 MB SKU 6 24 MB Applications (24 MAPPS) Terminal Services Client Files Pocket Internet Explorer - WAP Instant Messaging Spell Checker Operating System - Communications Push Router Msimmsgr.dll Wsp.dll 7 24 MB Consumer Applications (24MCONSUMER) Reader Windows Media® Player OEM section 9 differs depending on the MB available 9 - 16 MB Miscellaneous (MISC) Drivers Voice recorder Operating System Irsir.dll Ne2000.dll Files AvantGo 9 - 24 MB Miscellaneous (MISC) Drivers Voice recorder Operating System Irsir.dll Ne2000.dll Files AvantGo Transcriber Mssp2_en.lex (reader) Phone XIP Update The ability to remotely manage and configure devices is an important benefit for mobile professionals. With the addition of Flash ROM, enterprises or users can now update or upgrade their existing software with important patches and operating system upgrades using our XIP (Execute in Place) technology. XIP updating allows for complete operating system upgrades or can be used to update specific applications by isolating particular regions of the Flash memory and updating those parts. Next Release Highlights This section describes the new features planned for Windows Mobile software for Pocket PCs and Smartphones. The first items listed are features common to both Smartphone and Pocket PC. Some of these features are described in the Windows Mobile 2003 software for Smartphones "Next Release Highlights" section. Microsoft .NET Compact Framework is included in ROM. Applications can be written in Visual C# and Visual Basic .NET. Windows Mobile 2003 software for Pocket PC s supports the same Configuration Manager infrastructure as Windows Mobile 2003 software for Smartphone s . WAP push router extensibility enables custom processing of messages. CPF files can be used to provision mobile devices. Mobile device applications can perform a selective installation. L2TP/IPSec VPN is supported on Windows Mobile 2003 software for Pocket PC s . Pocket Internet Explorer is updated on Windows Mobile 2003 software for Pocket PC s . Incoming SMS messages can be intercepted. More e-mail services are configurable through Configuration Manager. Custom Read or Compose forms for Inbox can be registered. IPv6 is now supported. Bluetooth functionality is more controllable. The Windows Mobile 2003 software for Pocket PC s joins Windows Mobile software for Smartphone s in supporting WAP over SMS. The following features apply to Windows Mobile 2003 software for Pocket PCs only and are not available with Windows Mobile software for Smartphones. Windows Mobile 2003 software for Pocket PC s File Explorer supports context menu extensions . Context properties of input windows are controllable on Windows Mobile 2003 software for Pocket PC s . The SHSetInputContext and SHGetInputContext functions allow for runtime modification and query of contextual properties of an input window. These properties include whether auto-correct and auto-complete are enabled for the field. SHSetInputContext also supports predefined contextual classes such as "phone" or "e-mail", which encompass a specific group of settings for several contextual features. Notifications can force the device to turn on for Windows Mobile 2003 software for Pocket PC s . A new #define, SHNF_DISPLAYON , is defined in aygshell.h and forces the display to turn on when a notification fires. Automatic gesture recognition is controllable on Windows Mobile 2003 software for Pocket PC s . The NM_RECOGNIZEGESTUR E notification code, defined in commctrl.h, provides the ability for Windows Mobile 2003 software for Pocket PCs application developers to decide whether or not they would like to take advantage of automatic gesture recognition in common controls. Partner Offerings in Device Management This section introduces specific OTA device management products offered by some of Microsoft's partners. Descriptions and details about the solutions profiled here are provided by our partners. Note Direct any questions you have regarding partner product functionality to the partner contact listed for the product. Overview Microsoft has several partners who supplement and enhance the device management capabilities of Windows Mobile software for Smartphones and Windows Mobile software for Pocket PCs. Table 5 summarizes the offerings of those products described in this paper. Microsoft will update this list as new partners offer solutions, maintaining a "living version" of this document. Table 5: Summary of Microsoft partner device management offerings Partner Smartphone Pocket PC Phone Client Req'd Summary of Offerings Action Engine Y Y Y Action Backup, Action Lock, and Action Update Backup, Restore, Execute commands, Software Updates BSQUARE Corp. Y Y Software Quality Management Service Software Updates, Operating System Reflash, Access Point Name (APN) configuration DAT Group Y Opt. DAT Mobility Platform Personalisation, Backup, Restore Elata Ltd. Y Y elata senses 3.0 Subscription-based application delivery LogicaCMG Y LogicaCMG LDMP Server Provisioning, Management Information, Service Delivery mFormation Technologies Inc. Y Y mFormation Service Manager Manage, monitor, and control SmartTrust AB Y Y Smart Trust Device Management Solutions OTA Provisioning, Inventory, Access Control, Applications Synchrologic Y Y Synchrologic Systems Management Configure Devices, Hardware and Software Asset Management, Software Installation, Manages security WDS Global Y WDS Configuration (OTA) Web-based Client access tool; OTA configuration using SMS sends XML configuration file to device Action Engine Products Action Backup Action Lock Action Update Brief Description Action Backup is a software utility that enables a mobile user to easily backup or restore contacts, calendar, applications, ring tones, games, documents and other important device resident data using a wireless connection. Data is compressed during transfer and storage. Typically, incremental backups are performed to make the most efficient use of network resources. Backups can be scheduled or performed on demand and are initiated by the user or the carrier. Action Lock is a software utility that enables a wireless carrier to send an SMS command to a device to remotely execute commands on the device. Action Lock enables a carrier's administrator to use a wireless connection to send and execute any string of commands on the remote device. Currently, Action Lock sends commands to perform a data backup and then to erase all user data and files stored on the device. It is also possible to send commands to the device to disable the user interface. These actions can be performed "silently" without providing any visual or audio notification. Action Lock also enables a wireless carrier to automatically configure the network settings on a device. Essentially a wireless carrier sends an SMS message to the device instructing it to "call home." Once the device establishes a connection to the server, the server sends commands to the device that are then executed by the device. The carrier has the ability to read or set registry settings, GPRS, APNS, WAP settings, domain information, security policies and more. Action Update is a software utility that can be used to wirelessly deliver any type of software including new device system software, urgent software fixes, periodic maintenance updates or a software catalogue that contains the latest applications, ring tones, games, background images and more. The software for download can be installed "silently" by the carrier or downloaded, saved, managed, and run by the device user. Hardware and Software Dependencies and Other Products The product consists of a client and server and is designed to run on smart handsets that also run Microsoft Windows Mobile software for Pocket PCs, other Pocket PC operating systems, and other platforms as needed. The server runs on Windows 2000 Advanced Server. The product can be installed direct on the ROM or using Microsoft ActiveSync. The software footprint is typically optimized for the ROM space and employs various HTTPS commands for client-server communications. Figures 14-16 show client-server interactions using Action Engine products. . Figure14 : Client Server Interaction using Action Backup Figure 15 : Client Server Interaction using Action Lock Figure 16 : Client Server Interaction using Action Update Demo Options A demonstration is available upon request. Contact Tom Napier at Action Engine to arrange for a demonstration. Phone:	425.498.1508 E-mail: tom@actionengine.com Contact Tom Napier, tom@actionengine.com, 425.498.1508, Director of Strategic Alliances BSQUARE Corp. Products Software Quality Management Service Brief Description Software Quality Management Service allows wireless mobile operators and device OEMs to remotely manage devices including: Mass Software Updates ROM Updates Operating System Reflash Mass Application Distribution Transaction Reporting and Tracking SmartUpdate (Resource Sensing / Update Profiling) AutoRegistration APN Configure Supported Clients include installable and embedded versions for: Microsoft Windows CE .NET (version 4.1 and higher, Mobile Device Management (MDM) v1.0) Microsoft Windows Mobile 2002 software for Pocket PCs (MDM v1.0) Microsoft Windows Mobile 2002 software for Pocket PC Phone Edition(MDM v1.0) Microsoft Windows Mobile 2002 and 2003 software for Smartphones (MDM v2.0) Hardware and Software Dependencies and Other Products MDM Remote Management Client (RMC) requires approximately 300 KB of ROM memory and approximately 500 KB of RAM memory. The RMC is typically device specific and requires porting although it is architected modularly to minimize porting. The MDM service is network independent although the client code to register the device onto the MDM platform is slightly different for CDMA versus GSM. Figure 17 shows the BSQUARE system architecture for remote device management. Figure 17: BSQUARE system architecture for remote device management Demo Options Two demo options are available: Demo Option 1 - Performed on an HTC XDA (Wallaby) and displays remote file download and installation, remote locking, remote diagnostic, and remote monitoring and process reporting. This demo works OTA and requires a GRPS connection on the device and an Internet connection to run the Web-based management console. Demo Option 2 - Performed on a Compaq iPaq and displays the same features as Option #1, but runs on a tethered Ethernet connection in the event that either no GPRS or Internet connection is available. Other Offerings for this Device Professional engineering services for all Microsoft Windows Embedded - Development and Quality Assurance Windows Embedded Licensing - Windows CE .NET SDIO Now! For SDIO Software and licensing - Windows Mobile software for Pocket PCs, Windows Mobile software for Pocket PC Phone Edition, Windows Mobile software for Smartphones CE Validator quality assurance tool - Windows CE .NET, Windows Mobile software for Pocket PCs, Windows Mobile software for Pocket PC Phone Edition SmartBuild - Device Development Environment for Embedded Windows (not the Pocket PC) bApps - Productivity Suite of applications. Licensing Options Hosted service currently available and is offered at a flat fee per device per month. Deployed server product is negotiable and is a per device fee model. Contact Michael Tidwell, Sr. Product Manager Wireless Solutions BSQUARE Corp. 3150 139th Ave. S.E. Bellevue, WA 98005 Direct: 425.586.7814 Mobile: 425.442.3850 E-mail: michaelt@bsquare.com DAT Group Products DAT Mobility Platform (DMP) Brief Description DMP is a suite of over-the-air (OTA) provisioning services with a fully integrated and versatile billing methodology. The Platform consists of five server products that together cover the full spectrum of the mobile user's needs. DMP is a proposition that is hosted in a data centre either by the mobile carrier or by DAT on behalf of the carrier. The server products are: Smart Personalisation Server . Changes how the device looks and sounds. Smart Configuration Server . Sets up e-mail and other activities. Smart Application Server . Coordinates application licensing, evaluations, billing and downloads. Smart Safe Server . Provides a full device backup and restore. Smart Broadcast Server . Broadcasts messages to entire groups of subscribers. The above activities are all executed server side but the services selected are controlled from either an Internet connected Web browser (push to device) or the device itself (pull from device). After the services have been selected and confirmed they are wrapped up into a single .cab file suitable for over-the-air download. The servers send an SMS to the device with the URL where the .cab file is stored. Clicking on the URL initiates the download to the device. After the download is complete the .cab file self-extracts and the phone is built according to the design created on the browser. Hardware and Software Dependencies and Other Products The five server products can be installed on a single instance of hardware. As demand increases, the platform is extensible by adding extra machines as required. In addition to the server applications residing in the carrier data centre, a client application is required on the device as well for the "pull from device" facility to work. No client side component is required if all activity is controlled via the browser in a "push" configuration. Figure 18 depicts the DAT Mobility Platform system architecture. Figure 18 : DAT Mobility Platform system architecture Demo Options A demo of the subscriber Web site is available. The URL is currently www.smartconfig.com/sps but is shortly to change to www.smartphoneclub.com . At present only the functionality of the Smart Personalisation Server is accessible, under the tab Themes and Tunes . The remainder of the services will be rolled out over the next three months with a launch of the DMP targeted for February 17, 2003 at the 3GSM symposium in Cannes, France. Other Device Management Options The functions that exist within Smart Configuration Server (SCS) provide OTA device provisioning, e-mail and Internet setup. SCS holds records of the main Internet Service Providers (ISPs) and Managed Service Providers (MSPs) and the appropriate server names. So for example a UK user need only know that his ISP and MSP is Freeserve, and access numbers and mail server names fields are automatically populated during the OTA configuration process. Other Offerings for this Device Smart Application Server performs the administration and auditing tasks required for application downloads. It accepts an XML feed from the Microsoft Mobile2Market (M2M) catalogue and presents a searchable list of applications. New in 2003 - What's in the Pipeline? At the moment, payment for the services above is through premium rate SMS. During 2003 the platform will be fully integrated with major Telco billing systems. Also in the development pipeline for SAS is automatic negotiation of End-User Licence Agreements (EULAs) and other agreements between the software vendors, the carrier, and the subscriber (application purchaser). This is in line with the requirements of the M2M programme which is designed to promote the ease of delivery of applications from ISV through distributor to end-user. Licensing Options For the larger carriers who anticipate sales of 10,000-100,000 devices per year, outright purchase of the servers is preferred with their own bespoke Web site to access the facilities. However, some of the smaller carriers will not get any return on investment with outright purchase so DAT will be offering a managed service to fulfil their needs. The smaller carriers will still appear to have a branded access to DMP as production of customised Web access points is straightforward and cost effective. Service Options Maintenance of DMP is included in the managed service proposition. If system administration activities and content management are required too, then DAT will provide these also. Contact Phil Greenhalgh, Product Director DAT Group Bodiam Business Park Bodiam, East Sussex, UK, TN32 5UP Mobile: +44 7977 256300, ddi +44 1580 831691 E-mail: phil@datent.com elata Ltd. Products elata senses - subscriber services management system Brief Description The elata senses software system forms the foundation of successful service delivery platform. The software empowers the mobile operator to manage each stage of the service delivery process from service creation and discovery, to over-the-air delivery of applications to mobile devices elata senses meets mobile service providers' ARPU objectives in several key ways: Provides a single product management and marketing environment to segment, target, bundle, and deliver mobile data services. Integrates third party content and systems and manages the data services lifecycle. Services are made available and provisioned based on the capabilities of the device. Service provisioning business logic creates a rich marketing environment for mobile data services, such as wireless Java and MMS. elata senses unifies the provisioning and delivery lifecycle to ensure that new services are launched quickly and presented to the subscriber's device. Implements new pricing and billing models for both pre- and post-pay data services. elata senses is application and device independent offering mobile operators a flexible and future-proof subscriber management and service delivery solution for their mobile data services. Service providers such as Hutchison Whampoa's '3' are already deploying the system globally. Visit the Web site at www.elata.com . Hardware and Software Dependencies and Other Products The solution requires one of these operating systems: Microsoft Windows 2000 operating system HP UX Solaris BEA WLS Oracle 8i No client component is required. Downloadable content types are: .cab, AVI, MP3, URL and MMS components such as polyphonic ring tone file. Figure 19 shows how elata senses connects the OSS/BSS infrastructure to the subscriber. Figure 19 : elata senses and OSS/BSS Demo Options A demo is available on request. Other Device Management Options Auto mapping of appropriate .cab files based on user preferences. Other Offerings for this Device Application Management Licensing Options The server license based on numbers of supported subscribers. Contact Neil Hamilton, Partner Development Manager Cell: +44 7900 167707 E-mail: Neil.Hamilton@elata.com LogicaCMG Product LogicaCMG LDMP Server Brief Description What is the problem being solved? LogicaCMG's Device Management product provides the mobile network operator with a single carrier-grade solution that solves the problems associated with mobile data service deployment and lifecycle management. The LogicaCMG solution is unique in that it includes the ability to: provision voice, data, messaging, and browsers on mobile devices, download application and/ or service logic to devices, and manage device and subscriber profile data on a single network integrated entity.  It effectively enables the mobile operator to: Gain awareness of user device preference(s) Get new and existing users started Keep them updated Constantly add value to the user service package The current release (Release 1000) of the product brings a strong feature set to cover these 4 areas. Technical Details The current industry view of device management (see Figure 20) is focused on the management of simple device and access settings via the operator Central Accounting System (CAS). This approach relies too heavily on manual operator-user interaction to try to solve increasing problems of device and service complexity. To ensure the success of Value Added Services (VAS), device provisioning must be elevated to the level of service provisioning. This can only be achieved through intelligent integration of subscription awareness, device awareness and VAS provisioning with the existing device management capabilities. Figure 20 : Current industry view of device management LogicaCMG's Device Management product allows the operator to bring together the areas of VAS provisioning, device provisioning, subscription awareness and device awareness into a single product offering (see Figure 21). The addition of device awareness enables the operator to: Acquire critical real-time device and subscription information Simplify provisioning existing and new services (e.g. WAP-free portal and SMS provisioning ) Perform lifecycle management of legacy and new devices (e.g. OTA, WAP 2.0, SyncML etc.) Provide auto- and self-provisioning of new services (e.g. MMS) Improve customer brand awareness, satisfaction and ultimately retention Figure 2 1 : LogicaCMG Device Management The product supports the following provisioning protocols between the network and the device: Windows Mobile-based Smartphone Adaptation Kit WAP 2.0 Provisioning SyncML Device Management V 1.1 (Q1 2003) CDG IOTA (Q2 2003) Hardware and Software Dependencies and Other Products The LogicaCMG Device Management product software is available in Java and C++. It runs on Unix (HP-UX-11) or Linux operating system. Typical requested deployment platform is an A-class (i.e. A500) HP server. LogicaCMG plans to port the product to Microsoft Windows 2000 Server in the Release 1100 timeframe. LogicaCMG product offering contains server-side components only. LogicaCMG does not provide LogicaCMG-developed device management clients. However, LogicaCMG has an ongoing Device Management Interoperability testing program. The function of this program is to source and test the device management operation/capabilities of devices/clients. LogicaCMG is willing to use this capability to perform interoperability testing of Microsoft-sourced clients upon request. Additionally, LogicaCMG is willing to provide LogicaCMG-sourced clients to meet operator's device management needs. Standard deployment of LogicaCMG product is a 2U (2 Unit) Server for standard 19-inch rack. Installation requirements: the LogicaCMG product offering is installed by LogicaCMG installation staff. Backup and recovery options : standard deployment of the product is Simplex mode. However, hot-standby and load-sharing options are available. Other OEM or partner products required: Oracle 8I database. Figure 22 depicts the LogicaCMG Device Management solution in the network context. Figure 22 :  LogicaCMG Device Management in the network context Product Benefits The LogicaCMG product offers bring considerable benefits to both the mobile operator and their subscriber base. This section outlines some of these benefits. Stimulate service usage revenue . The inclusion of text message notification in the LogicaCMG Device Management solution allows the operator to publish the availability of new or existing services to individual or groups of subscribers.  The notifications include links, or other direct access methods, to the services that stimulate immediate consumption.  Easy access substantially contributes to repeat service usage. New revenue stream generation . The LogicaCMG solution offers service publishing; service provisioning and application download capabilities. The combination of these capabilities offers the operator the ability to advertise, brand and provision new services from a single point in their network to their subscribers, to enterprise subscribers or to subscribers of MVNO's. Reduces t ime to revenue . The LogicaCMG Device Management solution provides the operator with a single point of provisioning for new services to an individual subscriber or on group basis.  On average LogicaCMG has shown that time to revenue is reduced to within 24 hours of service launch. Reduced service operation cost . The LogicaCMG solution provides a single point-of-provisioning.  Additionally it offers simplified and self-provisioning.  These factors combine to increase the choice of service offering and reduce the overall operating cost for mobile data services. Device-independent provisioning . The LogicaCMG Device Management solution provides a comprehensive single point of provisioning for all OTA-capable phones regardless of the device manufacturer.  Only one integrated network entity is required, minimising operating costs. Corporate device provisioning . The LogicaCMG platform supports the Microsoft OTA provisioning protocol making it suitable for the provisioning of Microsoft Windows operating system-based wireless PDAs and smart phones. This combined with its ability to support device grouping and bulk provisioning, makes it ideal for the deployment of corporate applications and services. Product architecture benefits The product architecture offers the mobile operator the following benefits. Open future-proof solution . The LogicaCMG platform is built using open XML and Java technologies to allow the easy creation/addition of new devices to be provisioned.  It supports open interfaces to other Internet and other network elements performing this provisioning. Device independent provisioning . The product makes use of the platform provisioning standards support to offer true device-independent provisioning of both legacy and new devices. The product is built in a modular fashion to allow the easy addition of new OTA or network provisioning protocols. Single point of provisioning . The architecture of the product enables the operator to use the product the single point-of -provisioning for all new and devices within their mobile network. Single-point-of-administration . It is important that the operation and maintenance for device management is centralized. Particularly since the operator will need to add new devices from various manufactures on a frequent basis. The device independent architecture is designed to provide such centralized OAM capabilities Demo Options Release 1100 is currently commercially available for demonstrations. Contact dempseyc@logica.com to schedule a demo. Service Options LogicaCMG provides the following professional services with the basic product: SI for product integration New device/protocol interoperability testing Product training Installation and commissioning Contact Fred Jones, Product Manager Phone: +35 3868 563602 E-mail: jonesf@logica.com mFormation Technologies, Inc Products mFormation Service Manager Brief Description mFormation Service Manager is a comprehensive service management software platform that enables mobile operators to manage, monitor and control their next-generation converged wireless devices and networks. A real time, over the air (OTA) platform, mFormation controls, monitors and manages wireless devices, monitors the middleware applications that support the devices, and manages variables that affect the quality of service experienced by users of the devices. mFormation's solution is completely device- and wireless network-independent, enabling it to manage any mix of wireless devices (including hybrid smart phones and PDAs) across any combination of wireless networks, over the air, from anywhere in the world. To ensure compatibility with an organization's existing systems, it has been designed to tie into and leverage existing IT and OSS infrastructure components such as Help Desk, Alarm Management, Network Management, and Authentication systems. By using mFormation software, operators dramatically reduce the amount of time, effort and investments spent on monitoring and maintaining their wireless environment, while delivering better service to their users. Hardware and Software Dependencies and Other Products The mFormation Service Manager platform comprises the following components: Device agents .  A small software agent is embedded within the operating system of each wireless device or on each SIM card, which provides information to and receives commands from the management server. Designed as a "smart agent", it is capable of collecting information, executing policies, monitoring content servers and performing commands without generating excessive network traffic. The agent is constructed utilizing the APIs supplied by the manufacturers of the operating system, device, modem, and, in certain situations, the carrier's chipsets and SIM cards (GPRS). All data that is exchanged between the device agent and the management server is encrypted. Management server .  Residing in an operator's Network Operations Center (NOC) facility, the management server platform performs all monitoring, management and control functions, and collects and stores all asset and configuration information. We currently certify the product for Windows NT® Server (4.0, Service Pack 4 or later) and Windows 2000. Server-side functional security is accomplished through the use of a multi-level set of customer, group, role and user definitions that enable the secure separation of multiple customers within a single server and the assignment of specific product permissions and restrictions to different users and groups of users. ASAP (Application Service Access Point) monitor . Agents can be installed to monitor wireless application and content servers, enabling identification and diagnosis of various wireless application conditions and problems. ASAP can be decoupled from the rest of the platform to manage servers independently of devices. Web-based user interface . All management and control functions are available to authorized users through a Web-based interface, making it possible to control the wireless data network environment at any time, from anywhere. This flexible, Web-based architecture enables new wireless devices and networks to be added to the environment without changing the underlying framework. Security for the Web interface is provided through digital certificates and HTTPS access. Over-the-air data transport .  All communications between mFormation's smart agent and the management server are performed over the air. The transports used to move information between devices and the server were chosen based upon security, efficiency and cost effectiveness and include the following methods: MPAK (Mobitex) and ARDIS (Motient). These data protocols can be used to send messages directly to the devices. E-mail ("In-band" Messaging) . Devices can be controlled using e-mail as a transport. SMS (Short Message Service). Devices on GSM/GPRS network and CDMA (1xRTT) can be managed and controlled by using SMS as a transport. mFormation supports SMPP and UCP protocols to connect to an SMSC over the internet or other private TCP/IP network. Hardware/Software Configurations: The configuration requirements for the mFormation Service Manager product differ depending upon the target operating system and the size of the intended audience. For larger implementations, it is suggested that the server front-end logic be physically separated from the database. Tables 6-8 suggest the configurations for varying audience sizes (Contact mFormation for details on associated audience sizes.). Table 6: Minimum hardware requirements Item Configuration CPU Pentium III, 933 MHz, 256K Cache Memory 512MB RAM Disk Configuration 2 x 18GB Table 7: Typical hardware configuration s Item Configuration CPU 2 x Pentium III, 933 MHz, 256K Cache Memory 1GB RAM Disk Configuration Memory 8 x 18GB1GB RAM Table 8: Required software Item Version Operating System Windows 2000 Oracle Server 9i Figure 23 displays the mFormation Service Manager architecture. Figure 2 3 : mFormation Service Manager architecture Demo Options The product is available today and implemented in several enterprise clients. The product is also in trials at several mobile carriers in the United States and Europe. A demo can be arranged upon request. As the product user interface (UI) is completely Web-based, live demonstrations can be done anywhere at any time, and can be driven remotely via a Web-based demonstration tool such as Webex. Other Device Management Options Various gateways and interfaces are available for enterprise and OSS management frameworks such as Micromuse, HP OpenView, CA's Unicenter and IBM/Tivoli's NetView. The mFormation Gateway for Unicenter and mFormation Gateway for Netcool are both available as add-on modules to the product. An SDK is due to be released in the second quarter of 2003. Other Offerings for this Device mFormation Enterprise Manager performs similar functionality but is targeted specifically at enterprises needing to control and manage their internal wireless device deployments. New in 2003 - What's in the Pipeline? Future product development is targeted towards the evolving needs of mobile operators. A key strategy for the company is to develop management software that fosters open standards and neutralizes the proprietary systems on the device and the network infrastructure side. A key initiative is developing innovative Subscriber Information Module (SIM) card management capabilities on wireless devices. SIM cards are used by 70 percent of operators to provision users to their networks. Some key roadmap initiatives are summarized below: Server-Side SDK that allows interoperability with other legacy network management and OSS systems SDK to collect information from multiple nodes in the wireless infrastructure Support for Service Quality Assurance metrics Benchmarking to support million plus devices Data correlation for enhanced service performance and fault management Capability Maturity Model (CMM) compliance Device-Side Support for Universal Mobile Telecommunications Service (UMTS) devices Open standards for application configuration and collection of data Support for SIM-based 802.11 solutions Support for CDMA devices Licensing Options Two licensing options are available: Perpetual licensing of software . The product can be licensed directly as software. Pricing is based on the number of managed devices covered; yearly maintenance is a percentage of the purchase price. Revenue Share pricing . The product is licensed based on device fees per managed subscriber per month. Contact Amit Shah, VP of Product Development mFormation Technologies Inc 399 Thornall Street Edison NJ 08837 Phone: (732) 692 6200 Web Site: http://www.mformation.com/ SmartTrust AB Products SmartTrust Device Management solutions Brief Description SmartTrust Device Management is an integrated solution providing a full set of device management functions available from a number of different applications. The solution is based on the SmartTrust Delivery Platform portfolio and offers OTA provisioning of all types of mobile devices like SIM cards, mobile phones, Personal Digital Assistants (PDAs) and smart phones. The solution is based on the market-leading platform for OTA management, the SmartTrust Delivery Platform, today in use at more than 80 mobile operators worldwide. The core components in the SmartTrust Device Management solution are: Delivery Platform Framework includes basic common functions like access control, operation and maintenance and interfaces to the GSM/UMTS network for delivery services. Terminal Capability Repository holds the technical profiles for all different types of mobile devices used in the network. Subscriber Repository holds detailed information about each subscriber, like what subscription(s), what device(s) and (U)SIM cards(s) does the subscriber have as well as historical data. Terminal Repository holds detailed information about all individual mobile devices in the network, how they are configured, what settings, data and applications have been loaded to these and also historical data. Provisioning Manager is the central point for all device provisioning. For example, this is where provisioning services, such as handling the XML provisioning documents to be sent to the devices, are managed. Event Manager manages events (automatically generated or user initiated) from internal or external sources that may result in OTA provisioning or other activities. DP Applications are ready-made client applications that enable subscriber self-management (SmartTrust MyServicePortal), Point-Of-Sales management (SmartTrust Card Station) as well as batch management (SmartTrust Batch Order Manager) over-the-air. The information in the repositories is used by other DP components to perform provisioning services and by other applications to adapt the delivery of value added services. The repositories are also important to enable advanced customer management and support, targeted marketing campaigns and content/service adaptation by third party service providers. Hardware and Software Dependencies and Other Products The recommended hardware platform for DP production systems is the Sun Fire V480. It is accompanied by a standalone disk array, which can be had in two different configurations (Sun StorEdge D2 Array or Sun StorEdge T3 Array for the Workgroup) depending on the performance requirements needed. Sun Solaris 8 or 9 are the recommended operating system versions since minimum Solaris 8 is required on the new and faster UltraSparc III based hardware. Oracle 9.2.0 is the recommended database system. Veritas Volume manager is the recommended disk management system. Figure 24 illustrates the system architecture design. Figure 2 4 : SmartTrust system architecture Demo Options SmartTrust has a virtual carrier site where all SmartTrust products (once they are released) are available for demo for all partners and customers. Other Device Management Options SmartTrust has a complete range of products to manage all carriers' user equipment. Basically SmartTrust has managed the SIM, the most important user equipment the carrier has, since 1997. New in 2003 - What's in the Pipeline? The major new features are: 2003Q1 MyServicePortal . Handset type detection and Smartphone provisioning enabling Web-based self-provisioning 2003Q2 Support in Card Station for Smartphone provisioning from POS Support for automatic network initiated Smartphone provisioning 2003Q3 Support in Batch Order Manager for batch provisioning of Smartphones Some features may be available to specific customers earlier upon request. Licensing Options Three basic models exist: Per usage/capacity Per user Per country or carrier fee Contact Rickard Ebersjö, SmartTrust AB DirectTel: +46-8-685 93 00 Mobile: +46 703 744 280 E-mail: rickard.ebersjo@smarttrust.com Synchrologic Products Synchrologic Systems Management Brief Description Synchrologic Systems Management performs management functions that help to configure devices, collect devices assets, install software, and manage security. Hardware and Software Dependencies and Other Products Systems management is a server-based management tool and requires a Synchrologic Server running on Microsoft Windows 2000. There is a client component which is 800K. The client talks to the server over HTTP. The installation occurs from a link on a Web page downloading the necessary installation and configuration or via any method of msi packaging. This product provides full device and individual file specification backup and restoration. The entire device can be backed up and restored. Figure 25 depicts the Synchrologic system architecture. Figure 25 : Synchrologic system architecture Demo Options Product is available today. A 10-user evaluation package is available from Synchrologic. Other Device Management Options There are many device management options in addition to OTA device configuration. Synchrologic Systems Management provides software installation, software and hardware asset management, and security (enforcement of power-on password and destruction of data on demand through push). Other Offerings for this Device Synchrologic also provides the Synchrologic Mobile Suite that includes mobile access and sync for e-mail and PIM (Synchrologic Email Accelerator), files and Web sites (Synchrologic File Sync), corporate applications and transactional data to a device database (Synchrologic Data Synchronization.) New in 2003 - What's in the Pipeline? Bandwidth-based push of file and software delivery so that system administrators can make software updates available smartly. Measurements of bandwidth used over billing cycles to manage minutes or bytes transferred to and from devices. Licensing Options Product is licensed per user per device. Service Options Synchrologic provides consulting services for implementation and ongoing support of its software. Contact Claire Grevas, Director of Marketing Phone: +1.678.802.1230 E-mail: claire.grevas@synchrologic.com WDS Global Products WDS Configuration (OTA) Brief Description WDS Configuration provides the ability to automatically configure a mobile-device by delivering the information over an air interface, typically using structured SMS. As part of the configuration process, WDS maintains a knowledgebase of carrier and service provider settings globally for GPRS, WAP, e-mail, MMS and more. This allows a user to configure a device without knowing their carrier's settings. One of the main barriers to widespread adoption of data services has been the need for complex end user setup. A key requirement for a successful data product must be the ability for the user to take the device out of the box and start using it with the minimum amount of setup and knowledge. WDS Configuration provides automated provisioning services to configure Windows Mobile-based Smartphones over-the-air. These allow personalization of data services either through a Web site, through customer care or even at the point of sale. These services are enhanced by our unparalleled knowledgebase of configuration settings for major wireless and Internet services providers around the globe. This removes the dependency on the user having to know the individual settings for their ISP or wireless service. What can be configured? As new applications and services launch the list of configurable items is growing all the time. Typical configuration includes: With new applications and services launching all the time the list of configurable items continue to expand.  Configuration services are customizable and depending on the client available on the device can include: Network access - 2G, 2.5G, 3G including GPRS and ISP dialup WAP - WAP server, personalized homepage and bookmarks E-mail - Internet e-mail, Microsoft Exchange Server access Security - VPN configuration, WAP security Multimedia Messaging - MMS server settings Synchronisation - SyncML server settings Hardware and Software Dependencies and Other Products WDS Configuration is provided as a managed hosted service, and has the following dependencies: SMS termination - WDS must be able to deliver SMS messages to any device to be configured. WDS manages SMS links to many networks through global interconnects, or can connect directly to an operator's SMSC through the SMPP protocol. Trusted PPG certificate - The Windows Mobile-based Smartphone device will require WDS' trusted PPG (Push Proxy Gateway) certificate to be installed on the device. Figure 2 6 : Typical hosted WDS Configuration service Figure 26 diagrams a typical hosted WDS Configuration service. Users access the tool over the Web, and OTA configuration messages are delivered through the SMS channel. Demo Options http://secure.mouse2mobile.com/clients/microsoft/default.asp It is necessary to have the WDS trusted PPG certificate loaded onto the device for this demo. Contact WDS Global for specific demo information. Other Device Management Options Support for the Microsoft Windows Mobile software for Smartphones platform forms part of a wider device management framework. This also includes the ability to deliver settings to third party applications based on a WDS client API option. Contact WDS Global for more specific information. Other Offerings for this Device WDS also offers fully branded customer care, technical support, training and testing services for Microsoft Windows Mobile software for Smartphones. New in 2003 - What's in the Pipeline? Development of .NET APIs will allow third parties to integrate device management into their own systems. Licensing Options The product is a fully hosted managed service priced on a license fee per month, with a fee per transaction. Contact Doug Branson, Senior Account Manager Americas  Phone: +1 425 739 8868 E-mail: ms-services@us.wdsglobal.com Web Site: http://www.wdsglobal.com Comments or Other information This tool is currently being used in support of the Orange SPV. ######### The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication. This white paper is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS, IMPLIED OR STATUTORY, AS TO THE INFORMATION IN THIS DOCUMENT. Complying with all applicable copyright laws is the responsibility of the user. Without limiting the rights under copyright, no part of this document may be reproduced, stored in or introduced into a retrieval system, or transmitted in any form or by any means (electronic, mechanical, photocopying, recording, or otherwise), or for any purpose, without the express written permission of Microsoft Corporation. © 2003, Microsoft Corp. All rights reserved. Microsoft, Windows Mobile, ActiveSync, Windows, Visual C++, Visual Basic, Visual Studio, JScript, Outlook, Windows Media and Windows NT are either registered trademarks or trademarks of Microsoft Corp. in the United States and/or other countries. The names of actual companies and products mentioned herein may be the trademarks of their respective owners. Mobile Device Management	  PAGE  13 _1095053673.ppt _1099899565.ppt _1095052463.ppt