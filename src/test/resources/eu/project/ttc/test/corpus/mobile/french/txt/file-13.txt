PRESENTATION DE LA TECHNOLOGIE  WAP UNIVERSITE CLAUDE BERNARD LYON1 Octobre 2000 DESS IIR Option Réseaux							       Décembre 2000 3 PRESENTATION DE LA TECHNOLOGIE  WAP 51.1Quelques exemples d'applications du WAP : 5 Applications grand public : 5 Applications d'entreprise : 6 ARCHITECTURE 6Architecture matérielle générale du protocole WAP 9La passerelle WAP 11Le serveur Web 11Le réseau opérateur 12 STRUCTURE DU PROTOCOLE 13 LE PROTOCOLE WDP (Wireless Datagram Protocol) 16 LE PROTOCOLE  WTLS 22 LE PROTOCOLE WTP 28 LE PROTOCOLE WSP 32 PROTOCOLE WAE 35 ANNEXES 35Sécurité sur le WAP 37Comparaison WTLS et SSL 39LE WAP EN CHIFFRE 40Syntaxe de base WML 45Comparaison wap /I-mode : 46LE WAP FORUM 47LES VIRUS SUR LE WAP 48GLOSSAIRE 50 CONCLUSION 51 BIBLIOGRAPHIE PRESENTATION DE LA TECHNOLOGIE  WAP La technologie WAP a pour but de permettre à des  terminaux mobiles (les téléphones portables par exemple)  d'accéder à des documents circulant par des réseaux sans fil. Il s'agit donc de permettre à n'importe quel terminal mobile de pouvoir formater des documents. C'est pour cela qu'un protocole universel a été mis en place. le WAP ( Wireless Application Protocol ou en français  Protocole d'Application Mobile). Il se propose de définir la façon de laquelle les terminaux mobiles accèdent à des services Internet, et cela à un niveau au-dessus de la transmission des données, celle-ci étant spécifique à chaque opérateur de téléphonie. Le WAP est né de l'alliance en 1997 de plusieurs grands groupes regroupant des constructeurs de mobiles ( Nokia, Ericsson... ), des opérateurs en téléphonie mobile et des multinationales ( Phone.com, Microsoft.. .) au sein du WAP Forum. Celui ci est chargé de valider les spécifications techniques proposées par les sociétés participantes. La version 1.0 du protocole WAP a été publiée en Mai 1998. Les spécifications du WAP sont libres, c'est à dire que quiconque peut les lire et en apprendre le fonctionnement . Le WAP est actuellement finalisé dans sa version 1.2 depuis fin septembre 1999. Les spécifications associées sont disponibles sur le site du WAPFORUM (www.wapforum.org) ou sur le site de Nokia (www.nokia.com). L'ensemble des protocoles WAP ont été développés dans le respect des protocoles multicouches du modèle OSI, si bien que l'on peut faire un parallèle entre la pile TCP/IP et le WAP. Le méta langage XHTML (successeur de l'actuel HTML 4 et orienté XML), qui devait à l'origine être utilisé a finalement été abandonné, le WAP Forum lui ayant préféré le WML, langage assez intuitif et héritant du XML. Ce langage permet de naviguer par le biais d'un terminal entre différents documents WML et aussi entre différentes parties d'une page WML. Le WML peut être comparé à un HTML épuré. Pour enrichir ce langage, le WAP Forum a également donné les spécifications du WMLScript, langage comparable au Javascript pour l'HTML et qui permet au programmeur de tenir compte de certaines spécificités du mobile lui-même et d'apporter plus de fonctionnalités aux pages développées. 1.1Quelques exemples d'applications du WAP : Applications grand public : envoi et réception d'e-mails consultation des cours de la bourse téléchargement de sonneries de téléphone gestion de comptes bancaires recherche de numéros de téléphones ou d'adresses accès à des services d'information (services de news personnalisés, les derniers résultats sportifs) consultation des prévisions météo envoi de télémessages à des groupes de personnes commande et paiement de biens et de services recherche d'un restaurant ou d'un magasin dans le quartier réservation d'un billet de spectacle ou de train recherche du meilleur itinéraire entre deux points donnés consultation d'informations sur la circulation routière etc. Applications d'entreprise : envoi et réception des e-mails gestion de stocks suivi de commandes mise à jour à distance de l'agenda accès à l'intranet ( accès à des bases de données privées ) et/ou l'extranet de l'entreprise réservations de transports, d'hébergement gestion des frais de déplacement etc. la plus grande évolution à venir est sans conteste la future transition des réseaux actuels vers les normes GPRS, et surtout UMTS. En effet, le GSM ne propose actuellement qu'un débit pauvre limité à 9.6 kbit /s ce qui ne correspond même pas à la vitesse d'un modem d'il y a 5 ans. Toutefois, étant donné les restrictions engendrées par: le réseau (bande passante réduite) le terminal (écran réduit, mémoire en petite quantité, de faible capacités en terme de processeur, autonomie restreinte ) il était nécessaire de mettre au point un protocole spécifique à ces terminaux d'un nouveau type. A l'opposé, les nouveaux réseaux permettront d'atteindre des capacités nettement supérieures, ainsi le GPRS permettra d'atteindre 144 kbit/s, mais c'est surtout l'arrivée tant attendue de la norme UMTS qui fera réellement basculer la donne au profit du WAP. On pourra dans ce cas atteindre des taux de transfert de l'ordre de 2 Mbits/s, ce qui devrait permettre, par le biais de terminaux appropriés, de véhiculer de la voix, des données, mais aussi de la vidéo. ARCHITECTURE Tout comme pour le Web, le WAP a été conçu dans une approche client-serveur. Le terminal mobile incorpore un navigateur léger (l'équivalent d'Internet Explorer ou de Netscape Navigator) qui communique avec un serveur WAP. Les ressources des terminaux mobiles actuels étant limitées, le traitement des données est principalement assuré côté serveur. Les protocoles WAP se situant au dessus de la couche matérielle, le WAP est par conséquent indépendant du type de réseau de communication utilisé (GSM et bientôt GPRS et UMTS) ce qui lui procure une grande souplesse et une forte compatibilité au niveau de ses applications. Architecture matérielle générale du protocole WAP Les architectures WAP reposent sur quatre briques technologiques , chacune étant nécessaire pour garantir l'acheminement d'un message par le protocole WAP : La mise en place d'un serveur Web et (ou) applicatif disposant de contenu au format WAP (ou plus précisément WML) L'intégration d'une passerelle ou d'un serveur WAP Le réseau de l'opérateur L'utilisation par le client d'un terminal WAP c'est à dire qui héberge un navigateur WAP Les similitudes avec les architectures Web s'expliquent facilement. En effet, ces deux architectures remplissent la même mission, celle de générer des documents à partir de différentes sources de données et de les transmettre à un navigateur dédié. Ce schéma représente le cas général, mais la passerelle peut être située à différents endroits sur le réseau. Le schéma vu précédemment est en quelque sorte une vulgarisation de l'architecture WAP, en effet, celle-ci peut être variée. le schéma ci dessous représente le matériel mis en oeuvre pour une connexion WAP dans la plupart des cas: Cette solution technologique est celle qui est mise en oeuvre par les opérateurs téléphoniques pour que les usagers puissent accéder aux contenus WAP. Dans ce cas précis, l'opérateur héberge aussi bien la passerelle WAP que le RAS (Remote Access Service) qui permet d'accéder à Internet. C'est cette solution, facile à mettre en oeuvre qui est utilisée dans le cas de la diffusion de contenus WAP sur les sites des opérateurs. En pratique, l'utilisateur pourra accéder aux services   Internet uniquement par la passerelle de France Télécom et atterrira donc par défaut sur le portail  WAP de l'opérateur (Waplocking). Techniquement, cela ressemble à  l'obligation, imposée par les fournisseurs d'accès à Internet à leurs clients, d'afficher leur page d'accueil par défaut. Il s'agit, pour chacun des acteurs du WAP, d'imposer son propre bouquet de services, en assurant le maximum de passage sur son site portail. 2-paserelle chez un fournisseur Cette solution présente l'avantage, pour les fournisseur d'accès, de ne pas être dépendants des opérateurs téléphoniques et de pouvoir ainsi administrer leur propre passerelle WAP. Dans ce cas, seule la connectivité GSM/RTC des opérateurs est utilisée. L'utilisateur compose ainsi directement le numéro du fournisseur qui devient donc un opérateur téléphonique alternatif spécialisé dans la connexion Internet via le WAP. 3- passerelle WAP en interne Si le client veut garder la maîtrise complète des connexions WAP, il peut décider d'avoir sa propre passerelle WAP, on se retrouve alors dans la situation ci-dessous Cette solution peut être envisageable dans le cas d'applications WAP dédiées à une entreprise et exploitant des données sur l'Intranet. Le terminal (ou téléphone WAP actuellement) Le terminal n'a d'utilité, vis a vis du WAP, que par l'existence de son navigateur WAP. Le navigateur se charge en effet de décoder les informations transmises par la passerelle WAP et qui ont été créées soit par le pull (demande de l'utilisateur) soir par le push (initiative d'un serveur). Il est comparable à un ordinateur doté d'une connexion Internet. Même si les spécifications WAP sont actuellement dans la version 1.2, la plupart des navigateurs n'exploitent en fait que la version1.1 voire 1.0. Contrairement aux idées reçues, les navigateurs sont rarement conçus par les fabriquants de téléphones mobiles (Alcatel, Ericsson, Siemens...) mais plutôt par des sociétés tierces telles que Phone.com ou Microsoft (qui restent des majors dans le développement du WAP). Les plus connus sont : Phone.com UP browser 4.0: c'est l'un des premiers acteurs sur le marché des navigateurs wap. Celui-ci répond correctement à la norme WML 1.1 et de nombreux fabriquants de matériel lui font confiance. Navigateur 7110 : premier mobile en France à supporter le WAP, le 7110 de Nokia dispose de son propre navigateur qui répond à peu près aux normes WML 1.1 Microsoft Mobile Explorer : ce navigateur est actuellement en préparation et devrait voir le jour dans le deuxième semestre 2000. Le navigateur WAP est destiné à pouvoir afficher du contenu HTML et WML 1.1 sur tous les terminaux WAP utilisant Windows CE (utilisable donc par les PDAs:Personal Digital Assistant). Il est également possible d'avoir accès à des sites qui diffusent du contenu WML directement sur son ordinateur. De plus en plus de navigateurs dédiés WAP s'intégrent au navigateur Web par défaut. La passerelle WAP La passerelle est, en quelques sortes, l'élément clé de la communication dans le WAP, en effet, elle permet d'une part d'assurer la connexion entre le monde GSM et le réseau informatique (Internet ou Intranet), mais surtout, c'est elle qui code et décode les requêtes et les réponses entre le terminal mobile et le serveur Web. La connexion GSM-Internet n'est pas, à proprement parler, intrinsèque au WAP. En effet on trouve sur Internet des dizaines de sites permmettant d'envoyer des SMS (Short Message System) à n'importe quel mobile, preuve que la communication entre ces deux mondes est déjà faite. Par contre, le codage-décodage des requêtes est spécifique au WAP. Dans un souci d'optimisation de bande passante, chaque passerelle est chargée de compresser les requêtes qu'elle reçoit en un format binaire que le terminal devra décompresser et interpréter. La figure ci-dessous détaille le fonctionnement de la passerelle WAP Dans l'architecture d'une passerelle, on va retrouver un certain nombre de couches du protocole WAP ( à l'exception de la coucheapplication WAE). La passerelle est chargée de convertir les données reçues dans les datagrammes WDP en paquets conformes au protocole HTTP pour pouvoir dialoguer avec des serveurs Web et vice-versa. La figure suivante explicite la façon dont va avoir lieu un échange d'informations à travers une passerelle lors d'une requête. 1-L'utilisateur appuie sur une touche de son téléphone à laquelle correspond une URL Une requête est envoyée à la passerelle configurée par défaut, en utilisant le protocole WAP La passerelle WAP crée une requête HTTP conventionnelle pour l'URL demandée et la transmet au serveur Web 4- Cette requête HTTP est analysée par le serveur Web. Si l'URL correspond à un fichier statique (html), le serveur Web va chercher ce fichier et lui ajoute un entête HTTP. Si l'URL correspond à un script CGI ou autres, dans ce cas, le serveur lance l'application correspondante. 5- Le serveur Web retourne le jeu de cartes WML avec l'entête HTTP ajouté, ou directement les données WML issues du script. 6- La passerelle WAP vérifie l'entête HTTP et le contenu WML, et code le tout dans une forme binaire. La passerelle crée alors une réponse au format WAP qui est transmise au navigateur. 7- Le navigateur reçoit une réponse. Il interprète le contenu WML et affiche la première carte  du jeu de carte (voire description du langage WML). Le serveur Web Il faut ici prendre un peu d'écart par rapport aux serveurs Web classiques qui existent sur Internet et qui n'hébergent que des pages HTML. En effet, dans l'architecture WAP, le serveur Web a le rôle de fournir des documents qui seront affichés sur le navigateur via la passerelle WAP. Ainsi, son but n'est plus seulement de fournir des documents au format HTML mais également au format WML (Wireless Markup Language), langage en vigueur sur les terminaux WAP. Pour cela, il pourra être couplé à des bases de données pour générer du contenu ou à des serveurs applicatifs (destiné à la traduction des pages HTML en WML par exemple). De plus en plus d'hébergeurs de pages Internet proposent dorénavant un hébergement de pages WML et des scripts de test pour directement les visualiser dans votre navigateur préféré. Au prix de quelques efforts de compréhension du langage WML, vous aurez la satisfaction de disposer de pages dédiées au WAP. Le réseau opérateur WAP est un protocole qui n'a pas été défini de façon propriétaire par un opérateur, bien au contraire, c'est tout un consortium qui a bâti cette norme. Ainsi, quasiment tous les types de supports physiques sont exploitables. Parmi les plus connus, on trouvera Le GSM (Global System Communication for Mobile) TDMA (Time Division Multiple Access) CDMA (Code Division Multiple Access) PDC (norme japonaise) SMS (Short Message Service) De la même façon, WAP a été développé dans un souci d'évolutivité. Les normes émergentes sont également gérées : GPRS UMTS STRUCTURE DU PROTOCOLE La structure du protocole WAP a été décomposée en 5 couches bien distinctes. La figure ci-dessous présente ces 5 couches : Les couches dialoguent entre elles par le biais d'informations ou SDU (Service Data Unit) issues de couches adjacentes, auxquelles chacune rajoute son entête ou PCI (Protocol Control Information). Pour effectuer les fonctions spécifiques à chaque couche du protocole WAP, on utilise ce que l'on appelle des primitives, c'est à dire des fonctions représentant les services d'une certaine couche mais qui ne sont pas pour autant codées telles quelles dans les API (Application Programming Interface). Les primitives rencontrées dans le WAP sont de quatre types : requête (req), indication (ind), confirmation (cnf), réponse (res). Il faut savoir que dans la pile WAP, les applications peuvent interagir avec les différentes couches c'est pourquoi on retrouve souvent à l'intérieur d'une même couche une séparation en deux (voire plusieurs) couches, l'une permettant de faire l'interface avec les couches applications et l'autre étant purement destinée aux services spécifiées dans la couche. Il est important de garder en mémoire que WAP fonctionne sur des réseaux sans fil. De ce fait, il est primordial de faire transiter le minimum d'information sur le réseau. Pour cela , le protocole WAP a été développé de façon à minimiser le nombre de trames et la taille des en-têtes et donc d'augmenter le rendement (rendement double par rapport à HTTP pour de petites transactions). LE PROTOCOLE WDP (Wireless Datagram Protocol) La couche WDP est à la base de la pile du protocole WAP. Elle assure l'indépendance vis à vis du type de réseau utilisé par l'opérateur. Pour cela, elle permet d'interagir avec les protocoles de transferts de données proposés par les opérateurs, en s'adaptant au mode de support utilisé. C'est par cette couche que sont transmis et reçus tous les datagrammes WAP. Le protocole WDP s'intègre dans la couche transport du modèle OSI. Les fonctions qu'il assure sont : L'adressage des ports correspondant aux applications. Une fonction optionnelle de segmentation et ré assemblage Une autre fonction optionnelle de détection d'erreur Le protocole WDP fournit à la couche supérieure un service fiable. Cependant, comme le protocole WDP peut accepter différents supports physiques, l'implémentation est différente suivant le type de support utilisé et les performances ne sont pas égales pour tous les supports. WDP peut, bien entendu, supporter des envois de datagrammes pour plusieurs connexions simultanées sur le même support. Ces connexions proviennent de couches supérieures. La couche WDP peut être divisée en deux entités: L'une propose d'effectuer les services détaillés ci-dessus de la couche WDP l'autre, plutôt orientée adaptation permet de prendre connaissance d'informations relatives au téléphone lui-même comme les propriétés de configuration, l'état du réseau de sorte de pouvoir réagir en fonction de ces paramètres au niveau de la couche service WDP. Si un problème survient, comme par exemple l'entrée d'un terminal sur une zone de non-couverture, la couche adaptation doit être capable de prévenir la couche service de WDP, pour que celle ci donne aux couches supérieures l'ordre de fermer la connexion. Si des problèmes persistent, ils peuvent être encapsulés dans des paquets WCMP. WDP s'adapte aux modes datagrammes autorisés sur le support utilisé. Ainsi, la couche WDP et ses services sont utilisées dans le cas d'un réseau n'ayant pas de protocole de transport défini. Sinon WDP est " mappée " par le protocole UDP si le réseau supporte IP. En effet, UDP fournit l'adressage des ports et IP route et ré-assemble les paquets. Il n'est donc pas nécessaire de redéfinir la couche transport avec la couche WDP dans les cas des réseaux sans fil supportant le protocole IP. Des différences existent entre les modes d'accès GSM (principalement utilisé en Europe), CDMA (Etats Unis) et PDC (Japon) et les autres (iDEN, FLEX, TETRA ... ). Néanmoins, le mécanisme est similaire : une encapsulation de la couche transport WAP dans les mécanismes de transport mis en oeuvre. La figure ci-dessous montre l'architecture général de WDP: Une fois arrivé à la passerelle la couche adaptation passe le paquet au serveur WAP via un  protocole d'adaptation  (tunnelling protocol) à travers un sous-réseau  (basé sur TCP/IP, X25, etc ... ) LE PROTOCOLE  WTLS (WIRELESS TRANSPORT LAYER SECURE ) La couche sécurité vient s'intégrer juste au-dessus de la couche transport de telle sorte qu'elle est située au niveau le plus bas possible, ce qui permet d'assurer grâce à des normes établies, une sécurité meilleure que si elle avait été seulement au niveau applicatif. Le protocole WTLS permet de respecter trois des quatre contraintes principales lorsqu'on parle de sécurité liée aux réseaux : 1- la confidentialité : elle assure aux deux parties en présence (mécanisme client serveur) qu'elles sont les seules à avoir accès aux informations échangées. Ceci est assuré par un mécanisme d'encryption des données. 2 - l'intégrité des données : cela permet de s'assurer que les données n'ont pas été altérées par l'une ou l'autre des parties. On utilise pour cela des algorithmes de hashage pour s'assurer de la validité des données. Il y a une réémission si un changement d'empreinte est détecté d'un coté ou de l'autre 3 - l'authentification (coté serveur) : l'authentification a pour but de prouver qu'un tiers est bien celui qu'il prétend être. Des certificats permettent d'authentifier les serveurs. Seul le principe de non-répudiation n'est pas géré par la couche sécurité : celle ci aurait pour but de faire preuve juridique qu'une transaction a bien eu lieu. Ce mécanisme est souvent associé à une signature numérique. On peut penser que les mécanismes de sécurité mis en oeuvre nécessitent de grosse puissance de calcul, mais il n'en est rien. WTLS a été pensé de manière à s'adapter aux capacités des réseaux et mobiles GSM, c'est à dire faible taux de transfert, interactions lentes, capacités de calcul et de mémoire limitées et restriction gouvernementale en matière de chiffrement. La couche sécurité est construite de façon modulaire, c'est à dire qu'elle dépend du niveau de sécurité demandé pour une application donnée. La couche WTLS permet d'avoir une interface pour l'administration des connexions sécurisées. Ce modèle respecte les spécificités définies par TLS 1.0. Les mécanismes mis en oeuvre dans cette partie ne seront pas abordés dans les détails, certains étant plus proche de l'algorithmique ou de la cryptographie. (cf ANNEXE ) La couche WTLS permet à un client d'établir une connexion sécurisée avec un serveur et de fixer les options de sécurités prises en compte. L'établissement de la connexion sécurisée s'effectue en plusieurs étapes et le client aussi bien que le serveur peut annuler la communication à tout moment. La négociation inclut les paramètres de sécurité, l'échange de clés et l'authentification. Dans une session pleinement sécurisée, on retrouve un mécanisme similaire à la figure ci dessous : Il est possible d'ouvrir une session sécurisé abrégé de la façon suivante : Routine d'établissement de connexion : L'ensemble des primitives de la couche WTLS est donné par la figure ci-dessous Chacune de ces primitives peut être générée par le client ou le serveur selon le respect de certaines conditions prédéfinies.  Suivant les primitives utilisées, l'état de la connexion client-serveur va passer par plusieurs étapes chacune correspondant à un niveau de sécurisation plus ou moins élevé. Pour réaliser toutes ces opérations, la couche WTLS est en fait subdivisée en deux autres couches: L'une est appelée la couche enregistrement , chargée de transmettre les données, éventuellement les compresser, d'appliquer un code d'authentification, de chiffrer et de faire les opérations inverses pour le déchiffrage. L'autre couche est en fait le protocole d'accord permettant aux deux éléments en présence de se mettre d'accord sur la sécurité mise en jeu. Couche enregistrement : Paramètres définissant la connexion : Une fois que ces paramètres de sécurité ont été échangés et que les clés ont été  établies, les états de connexion peuvent être initialisés en leur faisant passer certaines étapes. Pour que la connexion soit maintenue, les méthodes mises en oeuvre doivent respecter les paramètres de sécurité définis au-dessus, notamment le temps maximal avant une réémission de la clé. Couche de négociation de connexion : Pour négocier une connexion sécurisée, un protocole d'accord appelé handshake est nécessaire. Le protocole Handshake met en oeuvre les fonctions suivantes : · Echange de messages de bienvenue pour un accord entre les deux parties sur les algorithmes utilisés. · Echange de valeurs aléatoires. · Echange des paramètres de chiffrement pour permettre au lient et au serveur de se mettre d'accord sur une " pré clé de chiffrement" · Echange des certificats et des informations chiffrées pour permettre au client et au serveur de s'authentifier · Génération de la clé secrète à partir de la " pré clé secrète " et échange de données aléatoires · Proposer des mécanismes de sécurité pour la couche enregistrement · Permettre au client ou au serveur de vérifier que l'autre extrémité à bien calculer les mêmes paramètres de sécurité et que la négociation s'est bien déroulée sans tentatives d'accès malveillant (hacker). Il est possible de modéliser le mécanisme de négociation par la figure suivante : * indique que le message est optionel * indique que le message est optionel signification des différents messages : CLIENT HELLO Se message est envoyé lors de la première connexion d'un client à un serveur. Il contient la liste des algorithmes de cryptographie supporté par le client par ordre décroissant de préférence et pour chacune d'elle la clé publique que le client souhaite utilisé. SERVER HELLO Se message est envoyé quand le serveur trouve un algorithme acceptable, s'il N'en trouve pas il envoie un message d'alerte fatal qui fini la connexion . SERVER CERTIFICAT Contient la clé publique choisi. SERVER KEY EXCHANGE MESSAGE Suit immédiatement  le server certificat (ou le server hello dans le cas d'une négotiation anonyme ). Se message est envoyer seulement quand le server certificat ne contient pas assez d'information pour autorisé le client à Echanger une « pre-master secret ». Ce message  transporte des informations Cryptographique pour autorisé le client à communiquer la « pre-master secret » , soit : Un clé public Des paramètres EC Diffie-Hellman CERTIFICAT REQUEST Le serveur peut demander un certificat au client, il contient une liste des certificats autorisés. SERVER HELLO DONE Ce message indique la fin du hello message et message associé. Après ce message le serveur attend la réponse du client. CLIENT CERTIFICAT Ce message est envoyer seulement si il est demander par le serveur. Le client certificat utilise la structure de certificat défini présédement dans Le serveur certificat. Au lieu d'un véritable certificat le client peut envoyer URL. Le serveur doit implémenter un mécanisme de protection contre l'envoie de faux URL. CLIENT KEY EXCHANGE MESAGE Avec ce message la « pre master secret » est envoyé soit par transmission de : La RSA-encrepted secret : Est utilisé pour les clés d'accord et les authentifications			le client génère 20 bits secret, les encryptes en utilisant la clé Publique du server certificat et envoie le résultat dans un message encrypté. La clé publique EC Diffie-Hellman CERTIFICATE VERIFY Ce message est utilisé pour obtenir une vérification explicite du client certificate, un signature. FINISHED Ce message est toujours a la fin du handshake pour vérifié que « l'exchange key » et l'authentification on réussi Les paramètres définis dans ce protocole sont donnés sur la figure suivante : LE PROTOCOLE WTP (Wireless Transaction  Protocol ) La couche WTP  permet de gérer trois types de connexion : classe0 : connexion à sens unique sans acquittement (non fiables) classe1 : connexion à sens unique avec acquittement (fiables) 3- classe2 : connexion à double sens (avec accusé de réception) avec acquittement (fiable) Ces trois types de connexions peuvent être asynchrones. Les acquittements peuvent être mis en attente et regroupés afin de réduire le nombre de messages échangés. Les avantages de la couche WTP permettent : Une plus grande fiabilité que simplement en mode datagramme : WTP évite aux couches de niveau supérieures d'avoir à retransmettre des données ou de les acquitter. Une plus grande efficacité dans les services orientés connexion. En effet, WTP ne se soucie en aucune manière de l'état de la connexion. WTP, étant orienté connexion , a été conçu pour l'usage de services utilisant des échanges entre client et serveur comme l'affichage de pages html. Les trois couches définies précédemment ont été définies pour s'adapter au fonctionnement du WAP à travers les téléphones mobiles. En effet : La classe0 a principalement été conçue pour l'application du protocole PUSH (cf ANNEXE) permettant à un serveur d'envoyer des informations à un mobile donné sans aucune vérification, le but étant ici d'optimiser le temps de la connexion et la bande passante du réseau. Dans ce mode de connexion le client n'acquitte pas les données envoyées, en cas de pertes de données, il n'y a donc pas de retransmission du serveur. La connexion se termine quand le message a été envoyé. La connexion ne peut pas être avortée. La classe1 permet d'effectuer un PUSH avec acquittement (on peut imaginer ce genre de transaction pour des informations distribuées de grande importance comme des avis de cotation en bourse). Dans ce mode de connexion, le client acquitte les données envoyées et la connexion se termine quand le serveur reçoit cet acquittement. Ici la connexion peut être avortée La classe 2 permet d'effectuer toutes les autres connexions qui nécessitent un échange fiable entre le client et le serveur. Cette transmission est dite à double sens car chaque message envoyé donne lieu à un message de réponse de la part de la machine destination et cette réponse donne lieu à un acquittement de la part de la machine source. Ici la connexion peut être avortée (par exemple si le client ne supporte pas cette classe). La couche WTP repose bien entendu sur la couche datagramme (la couche sécurité étant une option),  elle va donc bénéficier des services offerts par WDP et notamment la segmentation et le réasssemblage (SAR). Pour assurer l'interopérabilité entre les opérateurs, la couche WTP, qui est optimisée pour SAR, doit donc être capable de fonctionner avec et sans ce mode : Les ports de communication ainsi que la longueur du SDU doivent être définis dans la couche datagramme pour être compatibles avec la couche WTP. Comme pour la plupart des couches mises en oeuvre, WTP intègre une couche administration permettant de d'initialiser, de configurer, et de reconfigurer les ressources utilisées par la couche WTP. Les primitives disponibles pour les couches hautes sont les suivantes : Etablissement de connexion/envoi de message (Invoke PDU) Acquittement (Ack PDU) Réponse (seulement utilisée par la classe 2)  (Result PDU) Annulation de connexion. (Abort PDU) Pour faciliter la transaction à travers des supports " air " (transmissions sans fil), WTP permet de concaténer de multiples PDU à l'intérieur d'un même SDU. La transmission sans fil privilégie le minimum de paquets de données envoyés. Entête fixe d'une trame WTP: -Le bit CON (CONtinue) indique la présence d'un TPI dans le champ variable  -Le champ PDU (Protocole Data Unit) indique le type de message à transmettre -Le bit GTR (Group TRailer) indique que le paquet est le dernier des paquets du message transmis  -Le bit TTR (Transmission TRailer) indique que le paquet est le dernier des paquets du groupe de paquets transmis  -Le bit RID (Retransmission Indicator) indique si le paquet a été dupliqué par le réseau ou ré émis par l'émetteur  -Le champ TID (Transaction Identifier) permet d'identifier la connexion en cours ( De même que l'association adresse et port de la couche WDP). Ce champ est incrémenté par le créateur de la connexion à chaque nouvel établissement de connexion.  -Le champ REServe spécifie un champ ou un bit non utilisé Chaque primitive de la couche WTP a besoin de paramètres adaptés à son utilisation. Les trois primitives suivantes sont les plus importantes de la couche WTP :  -Pour l'établissement : -Le champ version est actuellement de 0x00  -Quand le bit TID est activé, cela signifie que l'initiateur de la connexion a changé de TID et donc que le prochain message n'aura plus le même identifiant -Si le bit U/P est actif, cela signifie que l'initiateur demande un acquittement du client à chaque message  -Transaction Class définit la classe de transaction : 0, 1 ou 2 -Pour la réponse -Pour l'acquittement : -Le bit Tve/Tok permet de savoir si la connexion est bonne ou non Partie variable de l'entête : Cette partie peut être représentée par un ou plusieurs TPIs (Transport Information Items). La longueur du champ TPI pouvant être de 2 ou 8 bits (représentant la longueur en octet). Long TPI Short TPI Les identifiants TPI peuvent être de plusieurs types:  - Error : pour définir les erreurs survenant pour un TPI faux ou erroné  - Info : permet de transmettre de courtes informations à l'intérieur de l'entête (pour statistiques)  - Option: pour transférer des paramètres entre deux protocoles WTP  - PSN (Packet Sequence Number) : Utilisé dans le cas de segmentation ré assemblage pour des PDU d'acquittement Explication succincte de la concaténation Un paquet WTP peut donc inclure un PDU comme dans la figure ci-dessous ou un ensemble de PDU à l'intérieur du même SDU : Dans ce cas, on utilise un indicateur sur le premier octet pour spécifier que le SDU contient de multiple PDU LE PROTOCOLE WSP (Wireless Session Protocol ) Comme son nom l'indique, la couche session permet d'établir une session entre un client et un serveur c'est à dire de définir les paramètres de connexion pour effectuer des transactions. La couche WSP permet ainsi à la couche application de bénéficier de deux types de sessions différentes : Session orientée connexion dans laquelle la couche session va interagir avec la couche transaction. Session orientée non-connexion dans laquelle la couche session va directement agir au niveau de la couche transport pour l'envoi de datagrammes bruts. WSP est dans son ensemble l'équivalent du protocole HTTP (dans sa version 1.1). On retrouve d'ailleurs un bon nombre d'implémentations identiques au HTTP dans WSP. Les principales caractéristiques de la couche WSP sont : L'établissement d'une connexion avec acquittement entre un client et un serveur et la libération de cette connexion. Négociation des différentes fonctionnalités mises en oeuvre dans la couche session. Echange de données entre le client et le serveur avec compression de données. Arrêt et reprise de la connexion en cours. Comme pour les autres couches spécifiées auparavant, le protocole WSP dispose de primitives permettant de dialoguer entre les deux terminaux distants. Celles-ci peuvent être résumées dans les tableaux ci-dessous pour le client et pour le serveur : L'utilisation de certaines fonctions requiert une classe d'utilisation particulière au niveau de la couche WTP (vu précédemment) L'en-tête du message WSP est relativement simple et est représenté par la figure suivante : Le champ TID est optionnel et est utilisé dans le cas de requêtes issues de réponses en le mode non connecté pour associer requête réponse. On le retrouve donc dans les requêtes MethodInvoke, MethodResult et Push. Le champ type spécifie le type de fonction du PDU : Toujours dans un but d'efficacité pour le transport d'informations par les supports sans fil, un mode de compression de données a été implémenté au niveau de la couche WSP. Ce format de compression reste compatible avec le protocole HTTP/1.1. Le mode de compression utilise les fonctions suivantes :  - Les chaînes de caractères connues sont transformées en valeurs binaires.  - Les dates et les entiers sont également transformés en valeurs binaires.  - Les informations redondantes sont supprimées. PROTOCOLE WAE (Wireless Application Environment  ) Comme son nom l'indique, la couche application se situe au niveau le plus haut de la pile WAP. elle a pour but d'offrir une connectivité grâce à laquelle les contraintes entre opérateurs téléphoniques, fournisseurs et constructeurs de terminaux disparaissent. Cette couche est un mélange de différentes techniques issues du Web et de la téléphonie. C'est par la couche application qu'est définie l'interface utilisateur sur son mobile et que des applications peuvent être développées. Cette couche intègre les spécificités du WML, du WMLScript et du WTA (Wireless Telephony Application : ensemble d'interfaces permettant d'accéder à différentes fonctions de téléphonie d'un terminal comme par exemple la composition d'un numéro). Les fonctions de la couche WAE peuvent être décomposées en deux principales : Définir une architecture pour les applications qui corresponde à l'architecture WAP, qui s'adapte aux faibles capacités des terminaux WAP et la faible bande passante qui leur est permise. Elle doit également être sécurisée, simple et supportant les règles de normalisation internationales. Définir un modèle de programmation idéal :qu'il soit riche et qui permette de créer des applications interactives et qui soient basées sur les standards du Web WAE a été pensé dans le but d'avoir une architecture ressemblant à celle du Web : Caractéristiques d'une architecture WWW : Toutes les ressources disponibles sur Internet sont nommées par des URLs (Uniform Ressources Locator) L'application client ou le navigateur (user agent) est capable d'analyser différents types de données Internet permet l'utilisation de divers protocoles capables de faire communiquer des clients et un serveur (i.e. HTTP) Caractéristiques d'une architecture WAE : WAE adopte un modèle qui ressemble à celui mis en oeuvre pour le WWW. Les contenus sont transportés par des protocoles standards du WWW et sont optimisés pour des protocoles similaires au HTTP dans les réseaux sans fil. De même que pour le WWW, le WAE utilise les URL pour attribuer des noms aux ressources. Par contre, WAE adapte certaines spécificités du WWW pour s'adapter au monde sans fil (mémoire, cpu, bande passante). WAE requiert de plus l'utilisation de passerelles pour compresser au mieux les paquets de données transmis par le réseau sans fil. On peut décomposer WAE en deux services élémentaires : L'agent utilisateur qui inclut le navigateur, l'éditeur de messages ...  Les services et les formats de données ou de langage comme le WML, les scripts ou encore des formats pour de futurs terminaux pour accès Internet : vCard (carte électronique de paiement) ou vCalendar (planning partagé). Bien entendu, les agents utilisent les services de la couche WAE. L'environnement WTA (Wireless Telephony Application) est destiné à fournir au niveau applicatif une communication avec les fonctions téléphoniques du mobile. En effet, il ne faut pas limiter la couche WAE seulement au navigateur WML. WTA est destiné à remplir 4 fonctions principales : Autoriser les opérateurs à proposer des fonctions téléphoniques avancées par le biais des interfaces graphiques des terminaux Permettre aux opérateurs de créer de nouveaux services Fournir un ensemble de services à tous les clients indépendamment du terminal utilisé Autoriser des " non-opérateurs " à fournir des services indépendamment du type de réseau utilisé ANNEXES Sécurité sur le WAP Dans les transactions électroniques qui peuvent s'effectuer, deux techniques de cryptage sont utilisées pour garantir la sécurité : La cryptographie à clé secrète : cette technique dite également symétrique ou à clé partagée. Elle permet d'assurer les fonctions de confidentialité et d'intégrité La cryptographie à clé publique dans la phase de négociation qui, elle, permet d'assurer (couplée avec des certificats) les quatrepoints clés : confidentialité, intégrité, authentification et non répudiation. Pendant la transaction, la clé secrète est utilisée. Elle est connue uniquement des deux parties de la connexion et a été générée de façon aléatoire. Cette clé sert à la fois à chiffrer et à déchiffrer les données. Seule la connaissance de cette clé permet de retrouver les messages en clair. La longueur de cette clé est comprise entre 40 et 128 bits. Pour que cette clé soit échangée sans risque entre les deux parties, il est important que l'échange ait lieu de manière extrèmement sécurisé. Pour assurer cette confidentialité et intégrité, la cryptographie à clé publique intervient dans la phase d'initialisation. Le mécanisme est le suivant : Chaque partie possède une paire de clé : publique et privée. La clé privée n'est connue que par son propriétaire alors que la clé publique peut être connue de n'importe qui sans précautions particulières. Celle ci peut être demandée directement à son propriétaire ou bien à un organisme de certification possédant cette clé. On appelle ce mécanisme asymétrique car un message codé avec la clé privée ne peut être récupéré qu'avec la clé publique et inversement. Ainsi, si on code avec la clé privée, dans ce cas, tous ceux qui possèdent la clé publique pourront décoder le message. A l'inverse, si on code avec la clé publique, dans ce cas, seul le propriétaire de la clé privée sera capable de décoder le message. C'est ce mécanisme qui est utilisé pour l'échange de la clé secrète. Cette méthode très efficace est de plus en plus utilisée. Cependant, dans le cas du WAP, elle ne peut être exploitée que dans la phase d'initialisation car elle nécessite l'emploi de clés de taille relativement importantes (512 ou 1024 bits) ce qui n'est pas compatible avec l'utilisation des réseaux sans fils. En effet, la bande passante étant surchargée, il est important de ne pas l'alourdir encore plus. Dans cette phase, on peut aussi utiliser les certificats d'authentification pour authentifier les parties en présence et vérifier les signatures numériques. Comparaison WTLS et SSL Comme il a été vu dans le détail de la couche WTLS, la sécurité du WAP a été copiée sur SSL SSL Le protocole SSL, bien connu des internautes, est actuellement la référence pour sécuriser une transmission sur Internet. Fonctionnement : Le navigateur fait une demande de transaction sécurisée au serveur 2- Le serveur lui envoie son certificat d'authentification délivré par un organisme officiel. Ce certificat comporte une clé publique. Le navigateur s'assure tout d'abord que le certificat délivré est valide puis il envoie au serveur une clé secrète codée issue de la clé publique ( de 56 ou 128 bits). Seul le serveur sera donc capable de décoder cette clé secrète car il détient la clé privée. Cette clé secrète ainsi créée sera utilisée par l'algorithme de Bulk (cryptographie symétrique) pour encoder les messages. Le serveur et le client possède maintenant une clé secrète partagée et les échanges sont faits par l'intermédiaire de cette clé. Pour assurer l'intégrité des données, on utilise un algorithme de hash. On voit bien que ce mécanisme permet d'assurer la confidentialité (mécanisme de chiffrement), l'intégrité (algorithme de hash) et l'authentification (certificats). Cependant seule l'authentification du serveur est implémentée et la non-répudiation n'est pas prise en compte. WTLS Quand on pense à sécurité on imagine des transmissions fiables mais ceci n'est pas garanti dans le cas du WAP, en effet, la bande passante est faible et la qualité des transmissions n'est pas garantie. Pour s'adapter au mieux à ces contraintes, WTLS définit un nombre d'entêtes moins important que SSL et la compression y est plus élevée. Dans le but d'augmenter encore plus la sécurité, WTLS définit en plus la possibilité de réactualiser la clé secrète sans passer par la phase de négociation pénalisante en terme de bande passante. Des solutions utilisant le protocole WTLS existent et permettent aux entreprises de profiter de WTLS dans leurs applications et d'intégrer des systèmes PKI (Public Key Infrastructure) pour la gestion des certificats d'authentification. Dans sa version actuelle 1.1, WAP permet les options de sécurité suivante : · Confidentialité · Intégrité · Authentification du serveur L'échange sécurisé nécessite un terminal mobile supportant WTLS, un serveur Web supportant SSL et une passerelle WAP (ou un serveur) supportant WTLS et SSL. Lors de l'échange sécurisé entre la passerelle WAP et un serveur Web, les données sont codées en utilisant le protocole SSL. Le serveur WAP a pour but de faire la conversion entre les formats WTLS et SSL. Ce point de liaison est critique car les données au format SSL doivent être décodées avant d'être ré encodées au format WTLS. Il est donc important que ce serveur soit astreint à des règles de sécurité particulières, tant au niveau logiciel que matériel. Les données échangées entre le terminal et la passerelle sont alors codées au format WTLS. Contraintes Actuellement, la sécurité de bout en bout pour une transaction électronique n'est pas garantie, en effet ni SSL ni WTLS ne gèrent l'authentification du client. Ce problème sera résolu à partir de la version 1.2 du protocole WAP. L'idée de cette version est de pouvoir récupérer à partir du terminal des informations relatives à son propriétaire. La solution retenue est l'utilisation d'un module embarqué sur le terminal, le WIM (WAP Identity Module). Le module WIM permet au protocole WTLS (ou à d'autres fonctions de la couche application) de sauvegarder et de récupérer à partir du portable des informations relatives au client, comme l'intégration de clés publiques et privées au sein de WIM. En effet le langage WMLScript, enrichi de la bibliothèque " crypto " permet d'interagir avec le module WIM. Le terminal peut alors être utilisé par exemple comme périphérique de signature numérique. Ce module prend tout son intérêt par son indépendance avec le type de terminal mobile. Il permet aux développeurs de mettre en place des solutions pleinement sécurisées. Pour le cas du téléphone portable, on imagine très bien pouvoir intégrer ce module à l'intérieur même de la carte SIM (Subscriber Identity Module). Des solutions proposant cette méthode existent déjà. Elles peuvent être à base de Java Card mais d'autres supports peuvent également être mis en oeuvre pour supporter ce module WIM, parmi lesquels on retrouve les smart cards (dotées de microprocesseurs), les cartes SIM, ou bien encore les cartes EMV (Europay Mastercard Visa) et SET(Secure Electronic Transaction) LE WAP EN CHIFFRE Fin août, France Télécom avait vendu 150 000 terminaux mobiles WAP et, début septembre, SFR comptabilisait 22 000 abonnés. Entre juin et juillet, les ventes de téléphones WAP ont légèrement progressé passant de 2% à 5 % de l`ensemble des ventes de terminaux mobiles. Prudent, Bouygues Telecom a retardé le lancement de son offre à fin octobre. Plus de cinquante millions d'utilisateurs de PC de poche connectables en Europe en 2003. Une croissance de 70 % par an. Un chiffre d'affaires annuel de 7,4 milliards de dollars, réalisé, qui plus est, sur 6 % de l'ensemble des communications cellulaires. Les chiffres avancés par les analystes du cabinet d'études de marché Strategic Analytics (anciennement BIS Strate) ont de quoi donner des ailes aux constructeurs de terminaux mobiles. Toujours selon le cabinet anglais, l'Europe devrait maintenir une large avance sur l'Amérique du Nord, puisque le nombre d'utilisateurs de  PDA connectables aux États-Unis n'atteindrait « que » vingt-huit millions d'ici à 2003, pour un chiffre d'affaires de 2,6 milliards de dollars. 75 % des marchands sur internet ont déjà développé une version WAP de leur site (et 50 % y réalisent des ventes), mais 13 % seulement ont fait de même pour les PDA. La plus part prévoient de développer une version WAP de leur site d'ici à 2002. Cependant, les personnes interviewées sont seulement 45 % à affirmer que leur plate-forme d'achat WAP remplit ou dépasse leurs prévisions, contre 88 % lorsqu'il s'agit de la plate-forme PC. Malgré ces résultats peu encourageants, 73 % des entreprises interrogées affirment que leurs projets sont inscrits dans une stratégie à long terme, initiée par leur direction générale à 88 %. Les budgets concernant le WAP sont encore modestes : environ 900 000 francs en moyenne contre plus de 13 millions de francs pour un projet Web. Syntaxe de base WML Le langage utilisé pour formater les documents WAP et définir l'interface de navigation est le WML. Il est définit par le WAP Forum par une DTD (Document Type Definition). Une DTD peut être vue comme la grammaire du langage considéré. Contrairement à HTML, un source WML non conforme à la DTD est rejeté. Un fichier WML ne définit pas une "page" mais un tas  constitué d'un ensemble de cartes identifiées de manière unique au sein d'un tas par leur indentifiant. Invariablement, la structure de base d'un document W.M.L. sera toujours la suivante: <?xml version="1.0"?> <!DOCTYPE wml PUBLIC "-//WAPFORUM/DTD WML1.1//EN"                                      "http://www.wapforum.org/DTD/wml_1.1.xml" encoding="UTF-8"? > <wml> <card id="un">.............</card> <card id="deux">.............</card> <card id="trois">.............</card> </wml> La première ligne stipule la version W.M.L. utilisée en faisant référence Au X.M.L. car W.M.L. est un langage dérivé du X.M.L.                                      Tous les tas doivent comporter un tel en-tête. La balise wml définit le tas et card spécifie une carte. De même qu'en HTML, les balises peuvent prendre des attributs. Ainsi, c'est par la définition de l'attribut id que l'on détermine l'identifiant unique de la  carte, qui ici est un. A l'ouverture du document W.M.L., la "card" qui figure en position initiale dans le code sera celle qui apparaîtra sur l'écran. Dans l'exemple ci-dessus, la "card" nommé "un" sera donc celle qui apparaîtra à l'ouverture du fichier. Le texte à afficher est défini dans un  paragraphe (balise p). Le texte contenu dans le paragraphe peut-être aligné à  gauche, centré ou aligné à droite selon  la valeur de l'attribut "align". BALISES WML : Balise                                     Signification A				Définit un lien ACCESS                                Tentative d'acces à uneURL ANCHOR                              Définit une ancre pour une  adresse email par ex. B                                            Definit un texte en gras BIG                                         Definit un texte en grand BR                                           Definit un retour à la ligne CARD                                      Carte correspondant à un écran DO                                            Définit un bouton EM                                            (emphase) Similaire à l'italique. S'adapte au  navigateur. GO                                           Permet l'affichage de la carte déterminée par la  valeur "href" HEAD                                      Entête du fichier contenant les balises META I                                              Definit un texte en italique IMG                                        Définit une image INPUT                                    Définit une zone de saisie META                                      Information générique relative au tas wml NOOP                                      Définit une opération qui ne fait rien ONEVENT                               Définition d'un évènement OPTGROUP                             Permet de regrouper tous les éléments options OPTION                                    Définit un choix pour sélectionner un élément P                                               Definit un paragraphe POSTFIELD                             Permet le passage de paramètres à un script (s'utilise conjointement  avec go) PREV                                         Définit un tag qui permet le retour en arrière sur une l'URL présente dans l'historique REFRESH                                   Permet de rafraichir l'affichage à l'écran SELECT                                      Propose une liste d'options SETVAR                                      Définit une variable SMALL                                       Definit un texte en petit STRONG                                    Permet de faire ressortir du texte (gras). S'adapte au navigateur. TABLE                                      Définit un tableau, s'utilise avec td et tr TD                                            Définit une nouvelle colonne TEMPLATE                             Définition d'une caractéristique qui va s'appliquer à toutes les cartes (card) TIMER                                      Permet de fixer une temporisation TR                                            Définit une nouvelle ligne U                                              Definit un texte en souligné WML                                       Definit un tas constitué d'un ensemble de cartes (balise HTML) Tableaux en WML: La structure de base d'un tableau est la suivante : (exemple d'un tableau d'une ligne (tr) de deux colonnes(td)) <table columns="2" id="table1" title="Exemple de table"> <tr> <td>contenu de la colonne numéro 1</td> <td>contenu de la colonne numéro 2</td> </tr> </table> Balises                                               Description <table columns="nbre">    		Spécifie le début d'une table. Le nombre de colonnes doit être spécifié. <table id="tableau1">	Spécifie le nom du tableau (attribut optionnel mais conseillé !) . <table title="titre">			 Spécifie le titre du tableau (attribut optionnel). <table align="left">      		Spécifie l'alignement du tableau sur la page: "left" ou "right" ou "center" (attribut optionnel) . <tr>contenu de la ligne</tr> 		Affiche une ligne qui doit contenir au plus "nbre" de colonnes Le nombre de lignes n'est pas limité. <tr id="ligne1"> 			Spécifie un nom id pour la ligne (attribut optionnel) . <td>contenu de la cellule (colonne)</td>    Affiche une cellule (colonne) à l'intérieur d'une ligne. <td id="cellule1">				Spécifie un nom id pour la colonne (attribut optionnel) . Les images en WML: De même que HTML, WML gère l'affichage d'images. Elles sont monochromes et d'un format particulier : WBMP (Wireless BitMaP). Pour convertir vos différents formats d'images en W.M.L., vous pourrez télécharger un plugin, le UnWired plugin, pour Photoshop et Paint Shop Pro . L'écran d'un terminal sans fil est de petite taille, la taille d'une image ne devrait pas                                      dépasser les 110x110 pixels. Leur  poids ne doit pas excèder 1500 octets. Balises  				Description <img src="image.wbmp"/>		Spécifie l'URL où se trouve l'image (attribut obligatoire). <img id="image1"/>			Définit l'id de l'image (attribut optionnel). <img alt="bonjour"/>			Définit le texte à faire apparaître à la place de l'image si celle-ci n'est pas affichable (attribut obligatoire). <img align="center"/>		Définit l'alignement de l'image (attribut optionnel). <img height="100"/>			Définit la hauteur d'une image (attribut optionnel). <img width="90"/>			Définit la largeur d'une image (attribut optionnel). A noter : L'attribut "alt" est obligatoire car il permet d'afficher le texte à la place de                                      l'image dans le cas où l'image ne serait pas affichable. Navigation en WML: Balises    				Description <do label="intitulé"></do>		Définit un bouton avec un intitulé (par défaut, retourne à la card n°1). <do type="prev" label="retour" > <prev/></do>       Définit un bouton de retour vers la page précédente. <do type="accept" label="aller vers une card" > <go href="#nom de card"></do>			 Définit un bouton d'accès à une card. <do type="reset" label="annulation" > <reset/></do>						  Annule le contenu d'un formulaire. <do type="delete" label="raz" > <delete/></do>    					 Remet à zéro le contenu d'un formulaire. Liens en WML: Balises   							Description <a href="#nom de card"> lien vers une autre card</a>	 Définit un lien vers une "card". <a href="http://www.dumobile.com/wap/index.wml"> lien vers un site</a> Définit un lien vers un site W.M.L. <anchor id="nom ancre ">nom ancre</anchor>         Définit le nom d'une ancre. <anchor>ancre vers une adresse email  <go href="mailto:wap@dumobile.com"> </go></anchor> Définit une ancre vers une adresse email Formulaires en WML: Balises  						Description <input type="texte"/>   Définit une zone de texte. <input type="texte" id="nom de la zone de texte">      Définit le nom d'une zone de texte. <input type="texte" name="valeur" format="*N"> Définit le type de caractères saisis.  Ici limite la saisie aux chiffres. <input type="texte" name ="nom de la variable">        Définit le nom de la variable attribué à cette zone. Les listes de sélection sont définies par la balise "select", chaque option dans la liste                                      étant intoduite par la balise "option". De même que pour "input", l'attribut "name" de la                                      balise "select" doit contenir le nom d'une variable, l'attribut "title" spécifie le titre de la                                      page intermédiaire générée par le terminal et l'attribut  booléen "multiple" autorise ou                                      interdit le choix multiple. L'attribut principal de la balise "option" est "value" et contient la valeur qui sera                                      stockée dans la variable résultat. Comparaison wap /I-mode : Le WAP  doit affronter de nombreuses critiques. Le nombre d'abonnés en  France est ridicule, comparé aux millions de ceux du service I-Mode de l'opérateur japonais NTT DoCoMo. Le constat est imparable. Lancés en mai dernier en France, les téléphones mobiles WAP permettant l`accès à internet ont attiré moins de cinquante mille clients. Tandis que, de l`autre côté du Pacifique, près de onze millions de Japonais et quelques Coréens surfent sur internet avec leurs terminaux i-mode, échangent des courriers électroniques, et téléchargent des images. De là à souhaiter l`arrivée de la technologie propriété de NTT DoCoMo, il n`y a qu`un pas. Premier avantage de la solution japonaise : une page compatible i-mode peut être générée avec tout outil de création de pages HTML, même si quelques restrictions doivent être respectées. Mais son atout principal est que les utilisateurs peuvent également surfer sur les pages HTML du web, du moment que celles-ci ne recèlent pas en leur sein des scripts, des applets Java, ou des animations en Flash. Les prochains terminaux i-mode iront encore plus loin. NTT DoCoMo a signé en 1999 un accord avec Sun pour inclure KJava, une version allégée de Java, dans les navigateurs des mobiles. Autre avantage les navigateurs intégrés dans les mobiles de NTT tolèrent assez les erreurs à la différence des navigateur WML les terminaux japonais traitent aussi bien la voix que les données. En cas d'appel, l'internaute prend sa communication et, en « raccrochant », il retrouve les pages ou les e-mails qu'il était en train de parcourir. Plus intéressant : les liens vocaux. En cliquant sur un URL sur la page d'une entreprise ou sur une publicité, l'utilisateur obtient automatiquement un opérateur. Dans ce cas, pourquoi ne pas passer à i-mode ? Impossible pour le moment car la technologie de l'I-mode repose sur de la commutation par paquet. « Quand le réseau GSM passera en communication par paquets, c`est-à-dire                            au GPRS, nous pourrons en discuter », avance-t-on chez NTT DoCoMo France. De plus, du point de vue de la sécurité, i-mode n`est pas satisfaisant. Cette notion ne semble pas avoir été la priorité des techniciens de l`opérateur japonais. Ainsi, la version actuelle ne sait pas gérer les certificats. Cet « oubli » rend difficile l`introduction d`i-mode dans les entreprises. Le succès tant relaté d`i-mode est aussi une construction marketing. Si moins de cinquante mille terminaux WAP se sont vendus en près de huit mois, seuls deux mille de type i-mode avaient été écoulés par DoCoMo six mois après son lancement, le 22 février 1999. Enfin, cet échec relatif pourrait avoir sauvé le WAP. « Comme pour internet sur le câble, le succès peut être source de problèmes, si tous les utilisateurs de téléphone mobile passent au WAP avec l'arrivée du GPRS, ni le matériel ni les logiciels - passerelles WAP, serveurs, bases de données - ne seront assez dimensionnés. » Les opérateurs européens peuvent scruter le réseau de NTT, qui, avec une progression de un million d'utilisateurs par mois, semble connaître des difficultés. « Si les hébergeurs ne se mettent pas au niveau, tout va s'écrouler », prévient-il. Peut on envisager une grande fusion ? La version 2.0 de WAP intégrera cHTML, le langage choisi par DoCoMo pour i-mode. De plus, ce dernier va évoluer vers xHTML, tout comme le WAP. Le WAP Forum compte également sur les évolutions techniques du standard pour s'imposer. « Le WAP utilisera TCP comme protocole  de communication et gérera les systèmes d'échanges de clés publiques PKI On prévoit également la prochaine arrivée de mobiles WAP gratuits, subventionné par différents opérateurs de services sans fil, comme Amazon, AOL ou Yahoo!. « Ces téléphones seront directement connectés à la passerelle WAP de l'opérateur sans fil et il ne sera pas              possible d'en changer LE WAP FORUM Cependant, le risque majeur lors de l'apparition de nouvelles technologies est le propriétarisme, c'est-à-dire le développement (donc le contrôle) d'un standard de facto par une entreprise, car cela empêche le développement d'un réel standard et pose de très nombreux problèmes au niveau de l'uniformité (il suffit de contempler le désastre des tentatives de création de balises propriétaires de Netscape et Microsoft). C'est pourquoi un consortium (l'équivalent du W3C, World Wide Web Consortium, pour le HTML) a été mis en place: le WAP Forum. Il s'agit d'un organisme indépendant des opérateurs de télécoms chargé de rédiger les spécifications du protocole WAP afin de permettre: A n'importe quel terminal de pouvoir accéder à des services en ligne De créer un protocole pouvant être utilisé sur n'importe quel réseau sans fil De définir les applications pouvant être faites LES VIRUS SUR LE WAP Bien qu'aucun virus n'ait à ce jour pointé le nez, la question se pose Or, contrairement aux PC, qui peuvent, eux, se doter de logiciels antivirus ou trouver une protection dans les coupe-feu mis en place à l'entrée des réseaux d'entreprises, le téléphone mobile se trouve bien démuni. Le protocole WAP ne peut pas à lui tout seul faire la différence entre un e-mail sain et un autre contaminé. Ce n'est qu'un protocole réseau, Il n'intègre pas la notion d'analyse de contenu . Hewlett-Packard s'apprête à commercialiser une passerelle WAP sécurisée, qui devrait, outre son rôle d'intermédiaire entre le réseau de l'opérateur de téléphonie mobile et Internet, se préoccuper du contenu des messages. Pour Pierre Bonnard, chef de produits avancés chez Alcatel, le risque de contamination virale reste cependant limité du fait même de la légèreté des configurations des mobiles. « Le              navigateur n'occupe qu'un espace mémoire limité, ce qui bloque la prolifération du virus. GLOSSAIRE GPRS      (General Packet Radio Service) Une extension de la norme GSM qui permettra de multiplier par un facteur dix le débit de transfert des informations. GSM 	    (Global System for Mobile Communication) Principale norme de téléphonie mobile utilisée en Europe (SFR, Itinéris) avec le DCS	    (Digital Cellular System) de Bouygues Télécom. SMS       (Short Messaging System) Petits messages que l'on peut envoyer sur un téléphone portable à partir d'un autre mobile ou d'un site Web. UMTS    (Universal Mobile Telecommunications System) Successeur annoncé du GPRS, devrait permettre des transferts de données allant jusqu'à 2 Mbits/s, ce qui fera réellement entrer la téléphonie mobile dans le multimédia (images animées, interactivité temps réel, son stéréo). WAP 	   (Wireless Application Protocol) Défini par Motorola, Nokia, Ericsson et Phone.com, le protocole WAP est une adaptation des protocoles internet aux caractéristiques techniques du téléphone mobile. XML      (Extensible Markup Language) Ce langage est le standard du W3C pour les langages à balises (HTML, HDML, WML). Ces derniers peuvent donc être décrit comme un sous-ensemble de XML. XML est lui-même un sous-ensemble de SGML SGML (Standardised Generalised Markup Language) Méta langage de description des langages de description de et tous ses dérivés). Serveur WAP  (WAP Server) Attention à ne pas confondre le serveur WAP et la passerelle WAP. Le serveur WAP est un "simple" serveur HTTP dont l'objectif est de servir des paquets (decks) WML à un client. Potentiellement, tout serveur Web est un serveur WAP. Le serveur WAP de Nokia cumule à la fois les fonctions de serveur HTTP et de passerelle WAP. Passerelle WAP (WAP Gateway) La passerelle WAP est un dispositif d'encodage et de décodage de paquets WML. Du point de vue du client, la passerelle converti le WML dans un format binaire compréhensible par le terminal WAP. Du point de vue du serveur HTTP, la passerelle peut fournir dans les entêtes HTTP, des informations complémentaires sur le terminal WAP. Par exemple, lorsque ces dernières seront disponibles, la passerelle pourra fournir une identification ou la localisation du terminal. Carte WML (WML Card) La carte est un élément d'interface et de navigation d'un paquet WML. Une carte doit appartenir à un paquet qui peut en contenir une ou plusieurs. Paquet WML (WML Deck) Un paquet est un ensemble de cartes WML. Le paquet est chargé en une fois par le	    navigateur WAP du terminal. C'est l'équivalent de la page HTML. Un paquet correspond à une URL.. Le paquet WML est un document XML. WMLScript Langage de script défini dans les spécifications du WAP. WMLScript est le pendant WAP de Javascript. W3C (World Wide Web Consortium) Organisme indépendant chargé de définir les standards du Web. http://www.w3.org PDA (Personnal Digital Assistant) Assistant électronique. C'est terminal portable électronique de faible taille tel qu'un Palm Pilot ou un Psion. La norme WAP est aussi destinée à ce type de matériel. HANDSHAKE Procédure d'accord utilisé entre un client et un serveur. Elle inclus les négociations Des parametres de sécurités (algorithme et longueur de clé) , l'échange de clé Et l'authentification qui a lieu au début de chaque connection sécurisée . MAC (Message Authentication Code) Algorithme utilisé pour le message d'authentification CONCLUSION On peut considérer que le wap constitue un échec relatif pour les opérateurs . Plusieurs raisons à cela : En premier lieu, le faible nombre de téléphones mobiles conforment au standard du wap, 110 000 terminaux vendus pour 25 millions d'utilisateurs de téléphones mobiles. Encore plus parlant la faible proportion des utilisateurs de service wap parmi les possesseurs de terminaux, en effet il n'y aurait pas plus de 60 000 « wapernautes » en France à ce jour. Le modèle économique du wap, reposant sur le paiement à la durée  de communication constitue un frein au développement du wap, les opérateurs ne sachant pas différencier les connexions wap et les communications téléphoniques. Difficulté de la navigation sur l'Internet mobile et un temps de connexions assez long, comparable au Minitel (de l'ordre de la minute). Les wappeurs ont compris qu'ils ne surferaient jamais à la manière d'un internaute naviguant sur le web à partie d'un PC. L'écran d'un téléphone demeure petit, en noir et blanc ainsi qu'un clavier de petite taille(ce qui rend difficile la saisie de texte). Malgré l'échec du wap auprès du grand public, 2 axes peuvent le sauver : Un repositionnement de l'offre d'Internet mobile en direction des entreprises, l'utilisation du wap présente un intérêt pour les  collaborateurs itinérants d'une entreprise (techniciens, commerciaux), qui peuvent disposer d'un dispositif léger pour communiquer avec leur entreprise (intranet mobile) Développement de l'extranet afin de disposer de services offrant une forte valeur ajoutée, ainsi on peut obtenir un changement de réservation sur un vol, réservation de taxis et des nouveaux services reposant sur la localisation du mobile wap :liste des cinémas, des spectacles restaurants ... située à proximité de l'utilisateur. Mais, avec la mise en oeuvre du prochain GPRS la bande passante disponible pour les applications d'échange de données sera fortement accrue. De plus la tarification au volume d'information échangé permettra au service wap de prendre son véritable essor. Quel que soit le résultat final, le wap aura été utile aux opérateurs pour prendre position sur le marché des services d'information pour téléphones mobiles, afin de préparer l'avènement de l'UMTS. BIBLIOGRAPHIE REFERENCE SUR INTERNET : www.wapsearche.com www.pageswap.com www.dumobile.com www.reseaux-telecom.net www.winwap.org www.commentcamarche.net www.wapforum.com www.guill.net www.01net.com REFERENCE  DE MAGASIN : 01 Réseaux N° 91/ Novembre 2000 01 Réseaux N° 92 / Novembre 2000 (spécial télécoms ) PAGE   

 PAGE   2